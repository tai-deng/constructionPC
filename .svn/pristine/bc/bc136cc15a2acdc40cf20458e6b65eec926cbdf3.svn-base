<template>
  <div class="scheduleList-wp">
    <header>进度方案列表</header>
    <main v-on:mouseout="mouseLeaveFun">
      <ul class="list-wp">
        <li v-for="item in items" :key="item.id" @mouseenter='hoverDialog($event,item)' @mouseleave="hoverDialogLeave" @click="itemClick(item)" :class="{select:judgeClickClass(item)}">
          <div class="text">{{item.ScheduleName}}</div><img src="./more.svg" alt="" @click.stop="showNavClick($event)">
        </li>
      </ul>
      <div class="show-bg" v-if="items.length == 0">
        无进度方案<br> 请在模型中新增进度方案
      </div>
      <nav id="navList" :style="{top:navList.styleTop + 'px',left:navList.styleLeft + 'px'}" v-show="navList.showOrHide" v-on:mouseover="navMouseOver" v-on:mouseout="navMouseLeave">
        <div class="sj">
          <div class="sj1"></div>
        </div>
        <ul>
          <li @click="copyDialogData.show = true" v-show="JSON.stringify(selectSchedule) != '{}'"><img src='./doc_btn_copy_normal.svg'>复制</li>
          <li @click="showDialog(3,2)"><img src="./edit.svg">编辑进度</li>
          <li @click="showDialog(2,2)"><img src="./deleteblack.svg">删除进度</li>
          <li @click="showDialog(1,1)" v-show="showAddOrDel"><img src="./addblack.svg">新增匹配规则</li>
          <li @click="showDialog(1,2)" v-show="!showAddOrDel"><img src="./edit.svg">修改匹配规则</li>
          <li @click="showDialog(2,1)" v-show="!showAddOrDel"><img src="./deleteblack.svg">删除匹配规则</li>
        </ul>
      </nav>
      <div class="ppgz-dialog" ref="ppgz" style="top:0;" v-show="ppgzDialog">
        <h2>匹配规则</h2>
        <p>{{ppgzHover.textLeft}} -- {{ppgzHover.textRight}}</p>
      </div>
      <div class="footer-btn" @click="showDialog(3,1)"><img src="./add.svg">新建进度方案</div>
    </main>
    <footer></footer>
    <dialogView ref="dialogView" @addItem="addItem" :ruleForm=dialogAddJd></dialogView>
    <matchDialog ref="matchDialog" :schedule-id="thisScheduleID" @requestItems=requestItems :ruleForm=dialogAddPpgz></matchDialog>
    <delDialogMatch ref="delDialogMatch" :schedule-id="thisScheduleID" @requestItems=requestItems :configText=dialogDelConfig></delDialogMatch>
    <div class="copy-dialog" v-if="copyDialogData.show">
      <div class="center">
        <h1>复制进度方案</h1>
        <el-row class="mt20">
          <el-col :span="5" class="label">
            名称：
          </el-col>
          <el-col :span="18">
            <el-input v-model="copyDialogData.name" placeholder="请输入内容"></el-input>
          </el-col>
        </el-row>
        <div class="sub-btn">
          <ul>
            <li class="ml20" @click="copyClick">确定</li>
            <li class="ml20" @click="copyDialogData.show = false">取消</li>
          </ul>
        </div>
      </div>
    </div>
  </div>
</template>
<script>
  import dialogView from "../dialog/dialog.vue";
  import matchDialog from "../dialog/matchDialog";
  import delDialogMatch from "../dialog/delDialogMatch";

  // window.ProjectID = "7e951a17-556b-46ee-9fb8-634d97940635";
  // window.ModelID = "c1e76e74-220c-4bee-93ce-b1779fa3e70c";
  
  export default {
    name: "scheduleList",
    components: {
      dialogView,
      matchDialog,
      delDialogMatch
    },
    props: {
      selectSchedule: {
        type: Object,
        default () {
          return {}
        }
      },
      ganttOrChartsData: Array
    },
    data() {
      return {
        fullscreenLoading: false,
        dialogAddJd: {
          name: "",
          date1: "",
          region: "",
          judge: "",
          ScheduleID: null
        },
        dialogAddPpgz: {
          selectn2: '',
          selectn1: '',
          inputVal: "",
          judge: null
        },
        dialogDelConfig: {
          title: "",
          conter: "",
          judge: null
        },
        items: [],
        navList: {
          showOrHide: false,
          styleTop: 0,
          styleLeft: 0,
          hoverJudge: false
        },
        ppgzDialog: false, //列表hover显示匹配规则
        thisScheduleID: "",
        ppgzHover: {
          textLeft: "",
          textRight: ""
        },
        thisItem: "",
        clickItem: null,
        showAddOrDel: true, //是否显示列表新建删除
        copyDialogData: {
          show: false,
          name: '',
          ganttOrChartsData: []
        }
      };
    },
    methods: {
      copyClick() {
        if (this.copyDialogData.name == '') {
          this.$message.error('请输入名称');
          return false
        }
        let _this = this
        let formData = new FormData()
        let obj = {
          ModelID: window.ModelID,
          ScheduleName: this.copyDialogData.name,
          ScheduleStartTime: this.$props.selectSchedule.ScheduleStartTime,
          ExternalField: this.$props.selectSchedule.ExternalField
        }
        if (this.$props.ganttOrChartsData.length > 0) {
          this.copyDialogData.ganttOrChartsData = JSON.stringify(this.$props.ganttOrChartsData)
          this.copyDialogData.ganttOrChartsData = JSON.parse(this.copyDialogData.ganttOrChartsData)
        }
        formData.append('ProjectID', window.ProjectID)
        formData.append('Schedule', JSON.stringify(obj))
        this.$http.post(`${window.urlConfig}/api/Prj/AddSchedule`, formData).then(res => {
          console.log(res)
          this.$emit('listAddItem')
          var formData1 = new FormData()
          formData1.append('ProjectID', window.ProjectID)
          this.copyDialogData.ganttOrChartsData.forEach(item => {
            item.ScheduleID = res.data
            item.Color = item.color
            item.TaskID = this.GUID()
            delete item.color
          })
          formData1.append('ScheduleTasks', JSON.stringify(this.copyDialogData.ganttOrChartsData))
          this.$http.post(`${window.urlConfig}/api/Prj/BatchAddScheduleTask`, formData1).then(res => {
            this.copyDialogData.show = false
          }).catch(res => {
            console.log('批量添加数据错误，原因' + res)
          })
        })
      },
      GUID() {
        let guid = '';
        for (let i = 1; i <= 32; i++) {
          let n = Math.floor(Math.random() * 16.0).toString(16);
          guid += n;
          if ((i === 8) || (i === 12) || (i === 16) || (i === 20))
            guid += '-';
        }
        return guid;
      },
      judgeClickClass(item) {
        if (this.clickItem) {
          if (item.ScheduleID == this.clickItem.ScheduleID) {
            console.log()
            return true
          } else {
            return false
          }
        }
      },
      itemClick(item) {
        console.log(item)
        this.clickItem = item
        this.$emit("requestData", item);
      },
      addItem(item) {
        this.items.push(item);
      },
      hoverDialog(e, item) {
        this.thisItem = item;
        if (this.thisScheduleID != item.ScheduleID)
          this.thisScheduleID = item.ScheduleID;
        if (item.MatchValueField == '' || item.MatchType == '') {
          this.ppgzDialog = false;
          this.showAddOrDel = true
          return false;
        } else if (item.MatchValueField == 0) {
          this.ppgzHover.textLeft = " 构件名称、类别及族名称";
        } else if(item.MatchValueField == 1){
          this.ppgzHover.textLeft = '构件属性'
        }
        if (item.MatchType == 0) {
          this.ppgzHover.textRight = '任务名称'
        } else {
          this.ppgzHover.textRight = '任务附加字段'
        }
        this.ppgzDialog = true;
        this.showAddOrDel = false
        var li = e.target;
        this.$refs.ppgz.style.top = li.offsetTop + "px";
      },
      hoverDialogLeave() {
        this.ppgzDialog = false;
      },
      //传1显示匹配规则 传3新建方案 2删除确认
      //judgeConter 判断类型 1删除匹配 2删除进度
      //judgeConter 传1新增  2 修改
      showDialog(nub, judgeConter) {
        if (nub == 1) {
          if (judgeConter == 1) {
            //新建
            this.dialogAddPpgz.selectn2 = '';
            this.dialogAddPpgz.selectn1 = '';
            this.dialogAddPpgz.inputVal = "";
            this.dialogAddPpgz.judge = 1;
          } else if (judgeConter == 2) {
            //修改
            this.dialogAddPpgz.judge = 2;
             if (this.thisItem.MatchType == 0) {
              this.dialogAddPpgz.selectn2 = "任务名称";
            } else if (this.thisItem.MatchType == 1) {
              this.dialogAddPpgz.selectn2 = "任务附加字段";
            }
            if (this.thisItem.MatchValueField == 0) {
              this.dialogAddPpgz.selectn1 = "构件名称、类别及族名称";
            }else if(this.thisItem.MatchValueField == 1){
              this.dialogAddPpgz.selectn1 = "构件属性";
              this.dialogAddPpgz.inputVal = this.thisItem.MatchValueField
            }
          
          }
          this.$refs.matchDialog.showDialog = true;
        } else if (nub == 2) {
          if (judgeConter == 1) {
            this.dialogDelConfig.title = "删除匹配规则";
            this.dialogDelConfig.conter = "确定删除匹配规则?";
            this.dialogDelConfig.judge = 1;
          } else {
            this.dialogDelConfig.title = "删除进度方案";
            this.dialogDelConfig.conter = "确定删除进度方案?";
            this.dialogDelConfig.judge = 2;
          }
          this.$refs.delDialogMatch.showDialog = true;
        } else if (nub == 3) {
          if (judgeConter == 1) {
            this.dialogAddJd.name = "";
            this.dialogAddJd.date1 = [];
            this.dialogAddJd.region = "";
            this.dialogAddJd.judge = 1;
          } else {
            this.$emit('temporaryDialogUpdataShow', this.thisItem)
            return false
            // console.log(this.thisItem);
            // if (this.thisItem) {
            //   this.dialogAddJd.name = this.thisItem.ScheduleName;
            //   this.dialogAddJd.date1 = [
            //     this.thisItem.ScheduleStartTime,
            //     this.thisItem.ScheduleEndTime
            //   ];
            //   if (this.thisItem.ScheduleCycle == 7) {
            //     this.dialogAddJd.region = "工作日(7天)";
            //   } else if (this.thisItem.ScheduleCycle == 5) {
            //     this.dialogAddJd.region = "工作日(5天)";
            //   }
            //   this.dialogAddJd.judge = 2;
            //   this.dialogAddJd.ScheduleID = this.thisItem.ScheduleID;
            // }
          }
          // this.$refs.dialogView.showDialog = true;
          this.$emit('temporaryDialogShow')
        }
      },
      showNavClick(e) {
        this.navList.showOrHide = true;
        this.navList.styleTop = e.pageY - 20;
        this.navList.styleLeft = e.pageX - 20;
      },
      mouseLeaveFun() {
        setTimeout(() => {
          if (!this.navList.hoverJudge) {
            if (this.navList.showOrHide) {
              this.navList.showOrHide = false;
            }
          }
        }, 300);
      },
      navMouseOver() {
        this.navList.hoverJudge = true;
      },
      navMouseLeave() {
        this.navList.hoverJudge = false;
      },
      requestItems() {
        console.log('@@@@@@@@@@@@@',window)
        this.$http(`${window.urlConfig}/api/Prj/GetScheduleByModel?ProjectID=${ window.ProjectID}&ModelID=${window.ModelID}`).then(res => {
          console.log(res)
          if (res.data.length > 0) {
            this.items = res.data;
            this.$emit('getSheduleAllData',res.data)
          } else {
            this.items = []
          }
          if (this.clickItem) {
            if (this.thisScheduleID == this.clickItem.ScheduleID) { //判断是否删除的是已展示页面
              this.$emit('clearGanttDataView')
            }
          }
        });
      }
    },
    mounted() {
      this.requestItems();
    },
    watch: {
      // thisItem:function(val,oldval){
      //   console.log(val,oldval)
      // }
    }
  };
</script>
<style lang="css" scoped>
  .copy-dialog {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: rgba(0, 0, 0, .5);
    z-index: 10;
  }
  .copy-dialog .center {
    width: 300px;
    height: 200px;
    background: #fff;
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    margin: auto;
    border-radius: 10px;
    padding: 20px;
  }
  .ppgz-dialog {
    width: 200px;
    min-height: 72px;
    background-color: #ffffff;
    box-shadow: 0px 18px 49px -30px rgba(87, 89, 89, 0.5);
    border-radius: 2px;
    border: solid 1px #c5d1ed;
    position: absolute;
    top: 0;
    right: -201px;
    padding: 15px;
  }
  .ppgz-dialog h2 {
    color: #b0bcd0;
    text-align: left;
  }
  .ppgz-dialog p {
    text-align: left;
    margin-top: 15px;
    color: #417fcd;
  }
  .footer-btn {
    width: 110px;
    height: 24px;
    background-color: #f7a500;
    box-shadow: 0px 2px 2px -1px #cfa95d;
    position: absolute;
    bottom: 24px;
    left: 0;
    right: 0;
    margin: auto;
    border-radius: 3px;
    line-height: 24px;
    color: #fff;
    padding-left: 20px;
    cursor: pointer;
  }
  .footer-btn img {
    width: 12px;
    height: 12px;
    text-align: center;
    line-height: 20px;
    position: absolute;
    top: 0;
    bottom: 0;
    left: 10px;
    margin: auto;
  }
  header {
    height: 30px;
    line-height: 30px;
    width: 100%;
    text-align: center;
    background-color: #f5f9fc;
    border: solid 1px #d9d9d9;
  }
  main {
    margin-top: -1px;
    width: 100%;
    flex: 1;
    background-color: #f9f9f9;
    border: solid 1px #e5e5e5;
    position: relative;
  }
  main nav {
    padding: 5px 0;
    width: 120px;
    position: absolute;
    left: 160px;
    border: 1px solid #d9d9d9;
    box-shadow: 10px 10px 5px #888888;
    background: #fff;
  }
  main nav .sj {
    width: 0;
    height: 0;
    border-width: 10px;
    border-style: solid;
    border-color: transparent transparent #a3adc4 transparent;
    position: absolute;
    top: -19px;
    left: 10px;
    z-index: 1;
  }
  main nav .sj .sj1 {
    width: 0;
    height: 0;
    border-width: 10px;
    border-style: solid;
    border-color: transparent transparent #fff transparent;
    position: absolute;
    top: -10px;
    left: -10px;
    z-index: 2;
  }
  main nav li {
    height: 25px;
    line-height: 25px;
    width: 119px;
    position: relative;
    padding-left: 39px;
    text-align: left;
    cursor: pointer;
  }
  main nav li img {
    position: absolute;
    top: 0;
    bottom: 0;
    left: 9px;
    margin: auto;
  }
  main nav li:hover {
    background-color: #edeff2;
    color: #417fcd;
  }
  main .show-bg {
    position: absolute;
    top: 0;
    bottom: 0;
    margin: auto;
    width: 100%;
    height: 40px;
    text-align: center;
  }
  main .list-wp li {
    width: 100%;
    height: 20px;
    position: relative;
    background-color: #fff;
    text-align: left;
    padding-left: 18px;
    cursor: pointer;
  }
  main .list-wp li img {
    position: absolute;
    width: 20px;
    height: 20px;
    top: 0;
    bottom: 0;
    right: 8px;
    margin: auto;
    display: none;
  }
  main .list-wp li.select {
    background-color: #9fbdd7 !important;
  }
  main .list-wp li:hover img {
    display: inline-block;
    cursor: pointer;
  }
  main .list-wp li .text {
    width: 80%;
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
    height: 100%;
    line-height: 20px;
  }
  main .list-wp li:nth-child(even) {
    background-color: #e3ebf3;
  }
  .scheduleList-wp {
    min-width: 200px;
    display: flex;
    flex-direction: column;
    align-items: stretch;
    height: 100%;
  }
</style>
