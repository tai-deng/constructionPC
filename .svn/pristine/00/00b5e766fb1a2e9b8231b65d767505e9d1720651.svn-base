<!--  import of construction 导入施工图预算 -->
<template>
  <div class="container-import-construction">
    <div class="top">
      <div class="buts">
        <button class="back-but" @click="back">
          <span class="icon-18 back-size"></span> &nbsp;返回上一级
        </button>
        <button class="re-upload">重新导入</button>
        <!-- <el-upload
            v-if="reUpload"
            class="re-upload"
            action
            :http-request="uploadFileXLSX"
            :file-list="fileList"
            :show-file-list="false"
            style="display: inline-block;"
          >
            重新导入
        </el-upload>-->
      </div>
      <div class="down">
        <menu-el-select :list="TableNamelist" @selected="select"></menu-el-select>
      </div>
    </div>
    <div class="bottom">
      <!-- :label="`<span>aa</span>${item.val}`" -->
      <el-table
        :data="list"
        max-height="800"
        stripe
        fit
        highlight-current-row
        :header-cell-style="{background:'#435089',color:'#FFFFFF'}"
      >
        <el-table-column :prop="item.val" v-for="item in titles" :key="item.index">
          <template slot="header" slot-scope="scope">
            <el-checkbox @change="onClickRow(scope.$index)">{{item.val}}</el-checkbox>
          </template>
        </el-table-column>
      </el-table>
    </div>
    <div class="is-upload">
      <button class="upload-but" @click="trueImportXlsx">确定导入</button>
    </div>

    <!-- 单体选择弹窗 -->
    <div class="dialog" v-if="isShowWX">
      <div class="select-monomer">
        <header class="head-title">
          温馨提示
          <span @click="close" class="el-icon-close close-icon-style"></span>
        </header>
        <div class="selectd">
          <img src="./bg.jpg" alt>
        </div>
        <p>*选择楼栋后上传xlsx表数据</p>
        <div class="buts">
          <el-button type="info" @click="close">取消</el-button>&nbsp;&nbsp;&nbsp;
          <el-button type="primary" @click="close">确定</el-button>
        </div>
      </div>
    </div>
  </div>
</template>

<script type='textecmascript-6'>
import menuElSelect from "@/common/Selects/elSelect.vue";

import { GetBOQTempTable } from "@/api/api.js";

import { saveImportTable } from "../modules/interfaces.js";
export default {
  props: {
    tableData: {
      type: Array,
      default: () => {
        return [];
      }
    },
    XlsxTableNamelist: {
      type: Array,
      default: () => {
        return [];
      }
    }
  },
  data() {
    return {
      reUpload: false, //是否显示重新导入按钮
      list: [], //展示表数据
      titles: [], //表头
      indexList: [], //已勾选的表头在titles中的下标数组
      valList: [], //已勾选的表头在titles中的val数组 已去null 去重
      TableNamelist: [], //选择表下拉菜单 XlsxTableNamelist的转换结构
      index: -1, //选择了哪个类型在TableNameList
      pageSize: 10000,
      pageIndex: 1,
      projectid: "12345678",
      type: "", //类型 汉字，如门 ， 窗
      isShowWX: true //是否显示温馨提示弹窗
    };
  },
  created() {
    console.log(this.tableData, this.XlsxTableNamelist);
    //转换表下拉菜单数据
    this.TableNamelist = [];
    Object.keys(this.XlsxTableNamelist).forEach((i, index) => {
      console.log(i, this.XlsxTableNamelist[i]);
      this.TableNamelist.push({
        id: index,
        text: this.XlsxTableNamelist[index],
        //传给后台的参数
        type: this.XlsxTableNamelist[index],
        listField: [] //已选择列表
      });
    });
    console.log(this.TableNamelist);
  },
  mounted() {
    this.$nextTick(() => {
      //显示重新导入按钮
      this.reUpload = true;
    });
  },
  components: {
    menuElSelect
  },
  methods: {
    back() {
      this.$emit("back");
    },
    /**
     * 选择哪个表头
     */
    onClickRow(index) {
      if (this.indexList.indexOf(index) == -1) {
        this.indexList.push(index);
      } else {
        this.indexList[this.indexList.indexOf(index)] = null;
      }
      console.log(this.indexList);
      let a = this.indexList.sort().filter(i => {
        return i || i == 0;
      });
      console.log(a);
      let arr = [];
      a.forEach(k => {
        arr.push(this.titles[k].val);
      });
      console.log(arr);
      // this.TableNamelist用于确定导入提交的
      console.log(this.TableNamelist);
      this.TableNamelist[this.index].listField = arr;
    },
    /**
     * 选择绘图列表某项
     */
    select(data) {
      this.load();
      /* eslint-disable */
      console.log(data);
      // 获取选择类型菜单 的选项下标，用于更改TableNameList对应的值
      let s = this.TableNamelist.filter(i => {
        return i.text == data;
      });
      this.index = s[0].id;
      console.log(this.index);

      this.type = data;
      let param = {
        pageSize: this.pageSize,
        pageIndex: this.pageIndex,
        projectid: this.projectid,
        userid: Number(localStorage.getItem("userId")),
        type: data
      };
      // 根据绘图选项 获取缓存中的表数据 表头
      this.Request(GetBOQTempTable(param)).then(res => {
        if (res.StatusCode === 200) {
          this.titles = [];
          //从第个对象中 获取所有表头
          Object.keys(res.Result[0]).forEach((i, k) => {
            console.log(i, k);
            this.titles.push({
              id: k + "",
              val: i
            });
          });
          this.list = res.Result;
        } else {
          this.$message({
            type: "error",
            message: res.Message,
            center: "true"
          });
        }
        this.$toast.clear();
      });
    },
    /**
     * 确定导入
     */
    trueImportXlsx() {
      if (!this.type) {
        this.$message({ type: "error", message: "请选择类型", center: "true" });
        return;
      }
      // if(this.valList.length===0){
      //   this.$message({type:'error',message:'请选择导出项',center:'true'})
      //   return
      // }
      let projectid = localStorage.getItem("projectid"),
        userid = Number(localStorage.getItem("userId"));
      this.load();
      saveImportTable(this, projectid,  0, userid, this.TableNamelist)
        .then(res => {
          console.log(res);
          this.$message({
            type: "success",
            message: res.Message,
            center: "true"
          });
          this.$emit("toSuccessPage");
          this.$toast.clear();
        })
        .catch(e => {
          this.$message({ type: "error", message: e.Message, center: "true" });
          this.$toast.clear();
        });
    },
    /**
     * 关闭温馨提示弹窗
     */
    close() {
      this.isShowWX = false;
    }
  }
};
</script>
<style lang='stylus' scoped rel='stylesheet/stylus'>
@import '../../../../assets/stylus/variable.styl'

.container-import-construction
  width 100%
  height 100%
  box-sizing border-box
  padding 0 20px
  .top
    width 100%
    height 80px
    display flex
    padding-top 20px
    box-sizing border-box
    .buts
      // width 500px
      height 40px
      display flex
      .back-but
        display inline-block
        width 180px
        height 40px
        background $font-color-13
        box-shadow 0px 2px 4px 0px rgba(161, 192, 250, 1)
        border-radius 4px
        font-size $font-size-16
        color $font-color-03
        .back-size
          font-size $font-size-16
      .re-upload
        display inline-block
        width 120px
        height 40px
        background $font-color-14
        border-radius 4px
        font-size $font-size-16
        font-family SourceHanSansCN-Medium
        font-weight 500
        color $font-color-03
        line-height $font-size-16
        margin 0 20px
        text-align center
        line-height 40px
    .down
      width 460px
      height 40px
  .bottom
    overflow-x auto
  .is-upload
    width 100%
    position fixed
    bottom 300px
    left 0
    text-align center
    .upload-but
      width 200px
      height 60px
      background #FDA143
      box-shadow 0px 0px 10px 10px rgba(255, 198, 140, 0.9)
      border-radius 4px
      color $font-color-03
      font-size $font-size-18
      border none
  .dialog
    position fixed
    top 0
    left 0
    width 100%
    height 100%
    background-color rgba(0, 0, 0, 0.6)
    z-index 999
    .select-monomer
      width 1000px
      height 640px
      margin 0 auto
      margin-top 100px
      background-color $font-color-03
      p
        font-size $font-size-18
        color $font-color-10
        box-sizing border-box
        text-align center
        padding-top 50px
        font-family SourceHanSansCN-Medium
        font-weight 500
      .head-title
        position relative
        width 100%
        height 40px
        background linear-gradient(225deg, rgba(105, 86, 255, 1) 0%, rgba(84, 138, 255, 1) 100%)
        color $font-color-03
        font-size $font-size-16
        line-height 40px
        text-align center
        .close-icon-style
          position absolute
          top 0
          right 0
          color $font-color-03
          font-size $font-size-26
          line-height 40px
          width 40px
          height 40px
      .selectd
        width 100%
        margin-top 30px
        text-align center
      .buts
        text-align center
        margin-top 80px
</style>
<style>
.bottom .el-table th > .cell {
  white-space: nowrap;
}
.bottom .el-table .cell,
.el-table th div {
  overflow: initial;
  text-overflow: initial;
}
.bottom .el-table td {
  border-bottom: initial;
}
.bottom .el-table .cell,
.el-table th div {
  white-space: nowrap;
  overflow: hidden !important;
  text-overflow: ellipsis !important;
  width: 160px;
  text-align: center;
}
.container-import-construction .el-checkbox__label {
  color: white;
}
.buts .el-button span {
  padding: 0 30px;
}
</style>

