<!-- 登录 -->
<template>
  <div class="container-login">
    <div class="wrapper">
      <div class="login_logo"><img src="./logo.jpg" alt=""></div>
      <p class="logo_title">工程项目PM协同管理平台</p>
      <div class="login_box">
        <!-- <form action=""> -->
        <ul>
          <li>
            <span class="account"></span>
            <i></i>
            <input type="text" v-model="userName" placeholder="请输入登录账号">
          </li>
          <li>
            <span class="password"></span>
            <i></i>
            <input type="password" v-model="passWord" placeholder="请输入登录密码">
          </li>
        </ul>
        <el-button type="primary" @click="loging" class="login_submit" :loading="loginLoading">登录</el-button>
        <!-- </form> -->
        <p class="user"><span>体验帐号：user</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span>密码：888888</span></p>
      </div>
      <p class="record_number">湖南建工集团有限公司 备案号某IPC备12345678号</p>
    </div>
  </div>
</template>

<script type='textecmascript-6'>
import { Login } from "@/api/api.js";
import { mapActions } from "vuex"
export default {
  data() {
    return {
      userName: "",
      passWord: "",
      loginLoading: false  //登陆按钮状态
    };
  },
  mounted() {
    /**
     * 直接关闭模型
     */
    this.$store.commit('GET_MODEL_BOX',{
      isShowModel:false,//是否显示模型 true:显示模型，如果模型已加载，则显示  false:隐藏模型
      isLoadModel:false,//是否加载模型  true：加载模型，如果已经加载，不会重新加载，  false:卸载模型
      top: 0,//距离顶部距离‘px'
      left: 0,//距离左边距离‘px'
      width: 0,//模型宽‘px'
      height: 0,//模型高 ‘px'
      zIndex:0,//模型层级
      background:'rgba(0,0,0,0)',
      ElementIDs:[],// 所有要显示的构件数组，包括半隐藏构件
      highLightElementIDs: [],// 高亮显示的构件
      functionNumber:[],// 需要模型调用的函数编号数组
    })
  },
  methods: {
    ...mapActions({ setUserInfo: "setUserInfo" }),
    /**
     * 登录逻辑：
      1、 用户登录成功后，判断所属项目ID是否存在，如果存在，直接进入项目首页；
      2、如果所属项目ID不存在并且当前用户是管理员，则进入项目开通列表页面。
      3、 如果所属项目ID不存在并且当前用户不是管理员，报错，提示请联系管理员配置当前用户所属项目。
     */
    loging() {
      // console.log("点击登录");
      if (this.userName == "") {
        this.$message({
          type: "error",
          message: "请输入用户名！",
          center: "true"
        });
        return;
      }
      // console.log("用户名不为空");
      if (this.passWord == "") {
        this.$message({
          type: "error",
          message: "请输入密码！",
          center: "true"
        });
        return;
      }
      // console.log("密码不为空");
      // this.load() //调用加载中蒙层
      this.loginLoading = true;
      this.Request(
        Login({ LoginName: this.userName, LoginPwd: this.passWord })
      ).then(data => {
        console.log("登录", data);
        if (data.StatusCode === 200) {
          // this.$store.commit("upisLogined", true);
          if(this.userName == config.adminer){
            sessionStorage.setItem('menuType', 2);  //给admin用户单独设置编辑权限
            this.$router.push({ path: "/project" });
          }else{
            this.$router.push({ path: "/nav/to/index" });
          }
          this.$message({
            type: "success",
            message: "你好，登录成功",
            center: "true"
          });
          // this.setUserInfo(data.Detiel[0]);
          localStorage.setItem("token", data.Detiel[0].access_token);
          localStorage.setItem("userId", data.Message);
          localStorage.setItem('projectid', data.Detiel[0].curProjectID)
        } else {
          this.$message({
            type: "error",
            message: data.Message,
            center: "true"
          });
        }
        // this.$toast.clear() //关闭加载中蒙层
        this.loginLoading = false;
      });
    }
  }
};
</script>
<style lang='stylus' scoped  rel='stylesheet/stylus'>
.container-login
  width 100%
  height 100%
  background url('./bg.jpeg') no-repeat
  background-size 100% 100%

  .login_logo
    box-sizing border-box
    display block
    padding-top 110px
    width 100%
    img
      width 120px
      display   block
      margin 10px auto

  .logo_title
    text-align center
    font-size 36px
    color #fff
    font-weight bold
    margin-bottom 70px

  .login_box
    width 480px
    height 320px
    margin 0 auto
    padding 54px 60px 0
    background rgba(255, 255, 255, 1)
    border 4px solid rgba(255, 255, 255, 1)
    box-shadow 0px 3px 25px 2px rgba(203, 208, 207, 0.43)

    li
      height 40px
      border 1px solid #DDDDDD
      background #ffffff
      margin-bottom 20px

      span
        width 51px
        height 98%
        display block
        float left

      span.account
        background url('../../assets/icons/success.png') center center no-repeat
        background-size 20px 20px

      span.password
        background url('../../assets/icons/success.png') center center no-repeat
        background-size 20px 20px

      i
        display block
        float left
        width 1px
        height 20px
        background-color #DDDDDD
        margin 10px 0 0

      input
        border none
        display block
        width 390px
        padding 0 15px
        float right
        height 98%
        font-size 18px
    .user
      color #666
      font-size 20px
      padding-top 20px
    .login_submit
      display block
      width 100%
      margin-top 66px
      height 40px
      border-radius 5px
      border none
      background-color #5C5C5C
      font-size 18px
      color #ffffff

  .record_number
    position fixed
    width 100%
    text-align center
    left 0
    bottom 86px
    font-size 18px
    color #999999
</style>