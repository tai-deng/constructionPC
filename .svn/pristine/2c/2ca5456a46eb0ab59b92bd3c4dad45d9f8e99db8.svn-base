import { resolve } from "url";

// 工具
export const getSomeMonthLast = (date) =>{
    console.log(date)
    let month = Number(date.split('-')[1])
    let time = new Date()
    time.setDate(time.getDate())//获取Day天后的日期 
    let y = time.getFullYear(),m
    if (time.getMonth() + month + 1>12){
      y++
      m = time.getMonth() + month - 11//获取当前月份的日期 d
    }else{
      m = time.getMonth() + month + 1//获取当前月份的日期 d
    }
    let d = time.getDate()
    return y + "-" + m + "-" + d
}
/**
 * 获取页面元素位置
 */
export const getDomLocation = (that) =>{
  return new Promise(resolve=>{
    let r = that.$refs.modelContainer.getBoundingClientRect()
    resolve({
      top:r.top,
      left:r.left,
      width:r.width,
      height:r.height
    })
  })
}

/**
 * 计算两个日期之间相差的年数月数天数
 * @param {Date} sDate1 开始时间
 * @param {Date} sDate2 结束时间
 */
export const getDiffYmdBetweenDate = (sDate1, sDate2) =>{
  let fixDate = function(sDate){
      let aD = sDate.split('-');
      for(let i = 0; i < aD.length; i++){
          aD[i] = fixZero(parseInt(aD[i]));
      }
      return aD.join('-');
  };
  let fixZero = function(n){
      return n < 10 ? '0'+n : n;
  };
  let fixInt = function(a){
      for(let i = 0; i < a.length; i++){
          a[i] = parseInt(a[i]);
      }
      return a;
  };
  let getMonthDays = function(y,m){
      let aMonthDays = [0,31,28,31,30,31,30,31,31,30,31,30,31];
      if((y%400 == 0) || (y%4==0 && y%100!=0)){
          aMonthDays[2] = 29;
      }
      return aMonthDays[m];
  };
  let checkDate = function(sDate){
  };
  let y = 0;
  let m = 0;
  let d = 0;
  let sTmp;
  let aTmp;
  sDate1 = fixDate(sDate1);
  sDate2 = fixDate(sDate2);
  if(sDate1 > sDate2){
      sTmp = sDate2;
      sDate2 = sDate1;
      sDate1 = sTmp;
  }
  let aDate1 = sDate1.split('-');
      aDate1 = fixInt(aDate1);
  let aDate2 = sDate2.split('-');
      aDate2 = fixInt(aDate2);
  //计算相差的年份
  /*aTmp = [aDate1[0]+1,fixZero(aDate1[1]),fixZero(aDate1[2])];
  while(aTmp.join('-') <= sDate2){
      y++;
      aTmp[0]++;
  }*/
  y = aDate2[0] - aDate1[0];
  if( sDate2.replace(aDate2[0],'') < sDate1.replace(aDate1[0],'')){
      y = y - 1;
  }
  //计算月份
  aTmp = [aDate1[0]+y,aDate1[1],fixZero(aDate1[2])];
  while(true){
      if(aTmp[1] == 12){
          aTmp[0]++;
          aTmp[1] = 1;
      }else{
          aTmp[1]++;
      }
      if(([aTmp[0],fixZero(aTmp[1]),aTmp[2]]).join('-') <= sDate2){
          m++;
      } else {
          break;
      }
  }
  //计算天数
  aTmp = [aDate1[0]+y,aDate1[1]+m,aDate1[2]];
  if(aTmp[1] > 12){
      aTmp[0]++;
      aTmp[1] -= 12;
  }
  while(true){
      if(aTmp[2] == getMonthDays(aTmp[0],aTmp[1])){
          aTmp[1]++;
          aTmp[2] = 1;
      } else {
          aTmp[2]++;
      }
      sTmp = ([aTmp[0],fixZero(aTmp[1]),fixZero(aTmp[2])]).join('-');
      if(sTmp <= sDate2){
          d++;
      } else {
          break;
      }
  }
  return {y:y,m:m,d:d};
}