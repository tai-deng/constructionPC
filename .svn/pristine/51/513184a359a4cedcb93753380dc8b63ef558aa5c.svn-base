<!-- 首页 -->
<template>
  <div class="container-index">
    <div style=" width: 38%">
      <div class="container_left">
        <div class="container_left_top">
          <div>
            建设单位：
            <span>XXX投资发展有限公司</span>
          </div>
          <div>
            设计单位：
            <span>XXX投资发展有限公司</span>
          </div>
          <div>
            施工单位：
            <span>XXX建工集团有限公司</span>
          </div>
        </div>
        <div class="container_left_detail">
          <div class="title">
            建设规模： 共 3 栋，总建筑面积 30000 ㎡
          </div>
            <div class="content">
              <div class="table fixedHeight" ref="more">
                <ul>
                  <li>
                    <div>
                    <span>栋号</span>
                    </div>
                    <div>
                    <span>建筑面积㎡</span>
                    </div>
                    <div>
                    <span>地上层数</span>
                    </div>
                    <div>
                    <span>地下层数</span>
                    </div>
                  </li>
                  <li  v-for="(item, index) in detailList " :key="index">
                    <div>
                    <span>{{item.date}}</span>
                    </div>
                    <div>
                    <span>{{item.name}}</span>
                    </div>
                    <div>
                    <span>{{item.address}}</span>
                    </div>
                    <div>
                    <span>{{item.underground}}</span>
                    </div>
                  </li>
                </ul>
              </div>
              <button class="button" v-if="detailList.length > 3" @click.prevent="changeFoldState()">
                <i :class="[brandFold ? 'el-icon-caret-bottom' : 'el-icon-caret-top']"></i>
              </button>
            </div>
        </div>

        <div class="container_left_bottom">
          <div class="container_fold">
            <div class="fold_title">
              <span></span>智慧工地
            </div>
            <div class="fold">
              <div>
                <p>8456</p>
                <span>今日考勤人数</span>
              </div>
              <div>
                <p>47</p>
                <span>特种作业人数</span>
              </div>
              <div>
                <p>6</p>
                <span>塔吊24小时预警次数</span>
              </div>
              <div>
                <p>34</p>
                <span>升降机24小时预警次数</span>
              </div>
              <div>
                <p>96%</p>
                <span>环境24小时监测达标率</span>
              </div>
            </div>
          </div>
          <div class="conainer_fold">
            <div class="container_fold">
              <div class="fold_title">
                <span></span>人员组织
              </div>
              <div class="staff_fold">
                <div id="dynamicTree"></div>
              </div>
            </div>
           
          </div>
        </div>
      </div>
    </div>

    <!-- 右侧栏 -->
    <div class="container_right" >
      <div class="container_right_layer">
        <!-- 左侧按钮 -->
        <button class="button" v-on:click="changeModelFoldState">
          <i :class="[modelFold ? 'el-icon-caret-left' : 'el-icon-caret-right']"></i>
        </button>
        <!-- 主题内容 -->

      <el-row class="select" :gutter="20">
        <el-col :span="7" class="select_left"> 
          <el-select v-model="value" placeholder="请选择">
            <el-option
              v-for="item1 in optionss"
              :key="item1.value"
              :label="item1.label"
              :value="item1.value">
            </el-option>
          </el-select>
        </el-col>
        <el-col :span="1"></el-col>
        <el-col :span="16" class="select_right">
          <div class="marquee">
            <div class="marquee_box">
              <ul class="marquee_list" :class="{marquee_top:animate}">
                <li v-for="item in marqueeList" :key="item.index">
                  <img src="../../assets/imgs/gonggao.png">
                  <p>{{item.name}}</p>
                  <a :href="item.href">查看更多</a>
                </li>
              </ul>
            </div>
          </div>
        </el-col>
      </el-row>
      <!-- 项目进去 -->
      <el-row  class="progress " :gutter="20">
        <el-col :span="2" style="  padding: 40px 0; font-weight:500;color:rgba(51,51,51,1)">项目进度：</el-col>
        <el-col :span="19">
          <el-row> 
            <el-col :span="2" class="progress_date">2018.01.01</el-col>
            <el-col :span="1" :offset="20" class="progress_date">2019.12.30</el-col>
          </el-row>
          <el-row>
            <el-col :span="24">
              <el-progress :text-inside="true" :stroke-width="23" :percentage="70" color="#4775CA"></el-progress>
            </el-col>
          </el-row>
          <el-row :gutter="20">
            <el-col :span="24">
              <el-progress :text-inside="true" :stroke-width="23" :percentage="80" color="#FDA143"></el-progress>
            </el-col>
                        
          </el-row>
          <el-row class="sign">
            <div>计划进度</div>
            <div>实际进度</div>
          </el-row>
        </el-col>
        <el-col :span="3" style="  padding: 18px 0; font-weight:500;color:rgba(51,51,51,1)" class="all_less">
          <el-row>
            <el-col :span="24">总工期：560天</el-col>
          </el-row>
          <el-row><el-col :span="24"> 剩余工期：234天</el-col></el-row>
        </el-col>
      </el-row>
      </div>
    </div>

    
  </div>
</template>

<script type='textecmascript-6'>
// vuex
import { mapMutations } from "vuex";
// 组件
import * as d3 from "d3";
// api 接口
// import { GetDefaultModelID } from '@/api/api.js'

export default {
  data() {
    return {
      brandFold: true, //控制表格展开收起
      modelFold: true, //控制model展开收起
      detailList: [    //人员组织数据
        {
          date: "A1",
          name: 200,
          address: 22,
          underground: 2
        },
        {
          date: "A2",
          name: 200,
          address: 22,
          underground: 2
        },
        {
          date: "A3",
          name: 200,
          address: 22,
          underground: 2
        },
        {
          date: "A4",
          name: 200,
          address: 22,
          underground: 2
        },
        {
          date: "A5",
          name: 200,
          address: 22,
          underground: 2
        },
        {
          date: "A6",
          name: 200,
          address: 22,
          underground: 2
        },
        {
          date: "A7",
          name: 200,
          address: 22,
          underground: 2
        },
        {
          date: "A8",
          name: 200,
          address: 22,
          underground: 2
        },
        {
          date: "A9",
          name: 200,
          address: 22,
          underground: 2
        },
        {
          date: "A0",
          name: 200,
          address: 22,
          underground: 2
        }
      ],
      optionss: [{
          value: '选项1',
          label: '黄金糕'
        }, {
          value: '选项2',
          label: '双皮奶'
        }, {
          value: '选项3',
          label: '蚵仔煎'
        }, {
          value: '选项4',
          label: '龙须面'
        }, {
          value: '选项5',
          label: '北京烤鸭'
        }],
        value: '',
        animate: false,
        marqueeList: [  //滚动数据
          {
            name: "XX时间节点，资料、图片未及时进行认证。",
            href: "https://www.baidu.com"
          },
          {
            name: "XX时间节点，资料、图片未及时进行认证。11",
            href: "https://www.so.com"
          },
          {
            name: "XX时间节点，资料、图片未及时进行认证。22",
            href: "https://www.google.com"
          },
          {
            name: "XX时间节点，资料、图片未及时进行认证。33",
            href: "https://www.youtube.com"
          }
        ] 
    };
  },
  created() {

  },
  mounted() {
    function Tree(option) {
      const defaultOpt = {
        width: 610, // 组织图宽度
        height: 550,
        // offsetTreeH:100,//影响树形横向的区域
        // rectHeight: [30,30,30,0], // 节点rect高度
        rectHeight: 30, // 节点rect高度
        rectWidth: 100,
        // rectWidth: [100,100,100,0],
        selector: null, // 挂载元素
        fontSize: 14,
        fontColors: ["#FFFFFF", "#FFFFFF", "#FFFFFF", "#333333"], // 字体颜色
        bgColors: ["#FFFFFF", "#4775CA", "#FDA143", "#D8DFEE"], // 字体颜色
        dataUrl: "" // 组织图信息
      };

      option = Object.assign({}, defaultOpt, option);

      this.width = option.width;
      this.height = option.height;
      this.rectHeight = option.rectHeight;
      this.rectWidth = option.rectWidth;
      this.selector = option.selector == null ? "body" : option.selector;
      this.fontColors = option.fontColors;
      this.bgColors = option.bgColors;
      this.dataUrl = option.dataUrl;
      this.fontSize = option.fontSize;
    }
    Tree.prototype.init = function() {
      var that = this;
      var tree = d3.layout.tree().size([that.width, that.height]);
      // .separation((a, b) => (a.parent == b.parent ? 1 : 2) / a.depth); //间隔函数

      var svg = d3
        .select(that.selector)
        .append("svg")
        .attr("width", that.width)
        .attr("height", that.height)
        .append("g") //整个组织图的样式信息
        .attr("transform", "translate(-109,10)");

      if (Object.prototype.toString.call(that.dataUrl) == "[object String]") {
        d3.json(that.dataUrl, (error, root) => {
          if (error) throw error;
          render(root);
        });
      } else {
        render(that.dataUrl);
      }

      function render(root) {
        const nodes = tree.nodes(root);
        const links = tree.links(nodes);
        svg
          .selectAll(".link")
          .data(links)
          .enter()
          .append("path")
          // .attr("class", "link")
          .attr(
            "d",
            d =>
              "M" +
              d.source.y +
              " " +
              d.source.x / 1.6 +
              "L" +
              (d.source.y + that.rectWidth + 10) +
              " " +
              d.source.x / 1.6 +
              " L" +
              (d.source.y + that.rectWidth + 10) +
              " " +
              d.target.x / 1.6 +
              " L" +
              d.target.y +
              " " +
              d.target.x / 1.6
          )
          .attr("style", "stroke:#979797;fill: none;stroke-width: 1.6px;"); //连接线样式
        const node = svg
          .selectAll(".node")
          .data(nodes)
          .enter()
          .append("g")
          .attr("class", "node")
          .attr(
            "transform",
            d => "translate(" + d.y + "," + (d.x - that.rectHeight) / 1.6 + ")"
          )
          .attr("style", "font: " + that.fontSize + "px sans-serif;"); //节点位置

        node
          .append("rect")
          // .attr("width", d => that.rectWidth[d.type])
          .attr("width", that.rectWidth)
          // .attr("height",  d => that.rectHeight[d.type])
          .attr("height", that.rectHeight)
          .attr("x", 0)
          .attr("y", 0)
          .attr("style", d => "fill:" + that.bgColors[d.type]); //节点背景颜色

        node
          .append("text")
          .attr("dx", that.fontSize)
          .attr("dy", (that.fontSize + that.rectHeight) / 2 - 2)
          .style("text-anchor", "start")
          .attr("style", d => "fill:" + that.fontColors[d.type])
          .text(d => d.name); //节点文字颜色
      }
    };
    const jsonObject = {
      name: "",
      type: "0",
      children: [
        {
          name: "领导",
          type: "1",
          children: [
            {
              name: "项目经理",
              type: "3",
              children: [
                {
                  name: "李XX",
                  type: "3",
                  children: [
                    {
                      name: "全部楼栋",
                      type: "3",
                      children: []
                    }
                  ]
                }
              ]
            },
            {
              name: "项目副经理",
              type: "3",
              children: [
                {
                  name: "李XX",
                  type: "3",
                  children: [
                    {
                      name: "全部楼栋",
                      type: "3",
                      children: []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          name: "工程部",
          type: "2",
          children: [
            {
              name: "项目总工",
              type: "3",
              children: [
                {
                  name: "李XX",
                  type: "3",
                  children: [
                    {
                      name: "A1",
                      type: "3",
                      children: []
                    }
                  ]
                }
              ]
            },
            {
              name: "项目总工",
              type: "3",
              children: [
                {
                  name: "李XX",
                  type: "3",
                  children: [
                    {
                      name: "A2",
                      type: "3",
                      children: []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          name: "施工部",
          type: "2",
          children: [
            {
              name: "施工员",
              type: "3",
              children: [
                {
                  name: "李XX",
                  type: "3",
                  children: [
                    {
                      name: "A2",
                      type: "3",
                      children: []
                    }
                  ]
                }
              ]
            },
            {
              name: "技术员",
              type: "3",
              children: [
                {
                  name: "李四",
                  type: "3",
                  children: [
                    {
                      name: "A3",
                      type: "3",
                      children: []
                    }
                  ]
                }
              ]
            },
            {
              name: "质量员",
              type: "3",
              children: [
                {
                  name: "李XX",
                  type: "3",
                  children: [
                    {
                      name: "A2",
                      type: "3",
                      children: []
                    }
                  ]
                }
              ]
            },
            {
              name: "安全员",
              type: "3",
              children: [
                {
                  name: "王五五",
                  type: "3",
                  children: [
                    {
                      name: "A2",
                      type: "3",
                      children: []
                    }
                  ]
                }
              ]
            },
            {
              name: "材料员",
              type: "3",
              children: [
                {
                  name: "王五五",
                  type: "3",
                  children: [
                    {
                      name: "A2",
                      type: "3",
                      children: []
                    }
                  ]
                }
              ]
            },
            {
              name: "预算员",
              type: "3",
              children: [
                {
                  name: "刘XX",
                  type: "3",
                  children: [
                    {
                      name: "全部楼栋",
                      type: "3",
                      children: []
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    };
    const option = {
      dataUrl: jsonObject, //组织图节点信息 JSON
      selector: "#dynamicTree" //挂载 div 的 id
    };
    const tree = new Tree(option);
    tree.init();
  },
  computed: {
   
  },
  methods: {
  
  
    // ...mapMutations({
    //   modelBox: "GET_MODEL_BOX"
    // }),
    // 信息滚动
    // showMarquee: function() {
    //   this.animate = true;
    //   setTimeout(() => {
    //     this.marqueeList.push(this.marqueeList[0]);
    //     this.marqueeList.shift();
    //     this.animate = false;
    //   }, 500);
    // },
    changeFoldState() {
   
      //获取.content 元素节点
      var target = this.$refs.more;
      console.log(target)
      target.classList.toggle("fixedHeight");

      // this.brandFold = !this.brandFold;
      // var highlightedItems = document.querySelectorAll(".fold");
      // if (this.brandFold) {
      //   highlightedItems.forEach(function(item) {
      //     item.style.display = "";
      //   });
      // } else {
      //   highlightedItems.forEach(function(item) {
      //     item.style.display = "none";
      //   });
      // }
    },
    changeModelFoldState() {
      this.modelFold = !this.modelFold;
      console.log(this.modelFold);
      if (this.modelFold) {
        document.querySelector(".left").style.display = "";
        document.querySelector(".right").style = "flex:1;position:relative;";
      } else {
        document.querySelector(".left").style.display = "none";
        document.querySelector(".right").style.width = "100%";
      }
    },

    // 获取用户默认ID
    // async GetUserInfo(){
    //   let userId = await GetDefaultModelID('Model/GetDefaultModelID')
    //   console.log(userId)
    // }
  }
};
</script>

<style lang ='stylus' rel ='stylusheet/stylus'>
.container-index {
  /* width: 98%;
  height: 966px;
  padding: 0 !important; */
  .el-select {
    height:40px;
    width:100%
    box-shadow:0px 3px 7px 0px rgba(161,192,250,1);
    border-radius:4px;
    .el-input {
      
      .el-input__inner { 
        height: 40px;
        background:rgba(71,117,202,1);
        box-shadow:0px 3px 7px 0px rgba(161,192,250,1);
        border: none;
        border-radius:4px;
        font-size: 18px;
        color: #fff;
      }

    }
  }
  .progress {
    margin-top: 39px;
    margin-left: 0 !important;
    .progress_date {
      font-size: 14px;
      color: #999;
      margin-bottom: 10px;
    }
    .sign {
      margin-top: 10px;
      div {
        float: left;
        padding-left: 20px;
        padding-right: 30px
        font-size: 14px;
        color: #333;
      }
      div:first-child:after {
        position: absolute;
        top: 50%;
        left: 0;
        transform: translateY(-50%);
        content: '';
        width: 8px;
        height:8px;
        background-color: #4775CA;
        border-radius: 4px;
      }
      div:last-child:after {
        position: absolute;
        top: 50%;
        left: 135px;
        transform: translateY(-50%);
        content: '';
        width: 8px;
        height:8px;
        background-color: #FDA143;
        border-radius: 4px;
      }
    }
    .all_less {
      .el-row {
        margin 8px 0;
      }
    }
  }
    
}

/*  */
/* 滚动条的宽度 */
/* ::-webkit-scrollbar {
  width: 10px;
  height: 10px;
  background-color: transparent;
} */

/* 滚动条的滑块 */
/* ::-webkit-scrollbar-thumb {
  background-color: #a1a3a9;
  border-radius: 6px;
}

.el-progress-bar {
  border: 1px solid rgba(144, 157, 212, 1);
}
.container-index .el-input__inner::placeholder {
  color: #fff;
} */
</style>

<style lang='stylus' scoped rel='stylesheet/stylus'>
* {
  font-size: 18px;
}

.container-index {
  width: 100%;
  height: 100%;
  font-size: 0.3rem;
  background: #F5F6FA;
  color: #000;
  display: flex;
  justify-content: space-between;
  flex-wrap: nowrap;

  // 左侧样式
  .container_left {
    position: relative;
    min-width: 600px
    height: 100%;
    margin: 0 40px 0 20px;
    .container_left_top {
      max-height: 92px;
      padding: 12px 20px;
      background: #fff;
      display: flex;
      justify-content: space-between;
      flex-wrap: wrap;
      flex-direction: row;
      align-content: space-between
      overflow: auto;
      border: 1px solid #C5CAD7;
      div {
        display: inline-blcok;
        padding: 8px 0;
        font-size:18px;
        font-family:SourceHanSansCN-Medium;
        font-weight:500;
        color:rgba(51,51,51,1);
        line-height:27px;
        span {
          color: #666;
        }
      }
      
    }
    .container_left_detail {
      position: relative;
      padding-top: 10px
      background-color #F4F6FF
      opacity: 1;
      z-index 100

      .title {
        margin-bottom: 10px;
        padding-left: 20px;
        line-height: 40px;
        color: #fff;
        height:40px;
        background:rgba(71,117,202,1);
        box-shadow:0px 3px 7px 0px rgba(216,223,238,1);
      }
      .content {
        text-align: center;
        .table {
          border: 1px solid #C5CAD7;
          transition: all 1s
          ul {
            padding: 0 20px
            li {
              display: flex;
              justify-content space-around;
              flex-direction row;
              flex-wrap: nowrap
              text-align: center;
             
              div {
                width: 25%;
                span {
                  display: block;
                  margin 0 20px;
                  height: 39px;
                  line-height: 39px;
                  color: #333;
                  border-bottom: 1px solid #C5CAD7;
                    }
              }
              div:nth-child(2n-1) {
                background:rgba(244,246,255,1);
              }
              div:nth-child(2n) {
                background:rgba(234,237,250,1);
              }
              
            }
            li:first-child {
              div {
                span {
                  border-bottom: 1px solid #1E2637;
                }
              }
            }
            
          }
          
        }
        .button {
          width: 160px;
          height: 20px;
          background: rgba(0, 0, 0, 0.3);
          border-radius: 0px 0px 6px 6px;
          color: #fff;
          border: none;
        }
        .fixedHeight {
          overflow hidden;
          height: 158px;
        }
      }

     
     
    }
    .container_left_bottom{
      position: absolute;
      top: 352px;
      left: 0;
      width: 100%;
      z-index: 0;
      .container_fold {
        .fold_title {
          font-size: 20px;
          color: #333;
          font-weight: 500;
          padding-bottom: 14px;
          span {
            margin-right: 16px;
            display inline-block;
            width: 4px;
            height: 20px;
            background:rgba(253,161,67,1);
          }
        }
        .fold {
          display: flex;
          justify-content: space-around;
          flex-wrap: nowrap;
          margin-bottom: 14px;
          div {
            display: flex;
            justify-content center
            flex-direction: column
            align-items: center
            width: 18%;
            height 260px;
            background:rgba(255,255,255,1);
            box-shadow:0px 3px 7px 0px rgba(216,223,238,1);
            border-radius:4px 4px 0px 0px;
            p {
              font-size: 29px;
              margin-bottom: 11px;
            }
            span {
              width: 80%
              margin-top: 11px;
              text-align: center;
              color: #666;
            }
          }
          div:nth-child(2n-1) {
            border-bottom: 1px solid #4775CA
            p {
              color: #4775CA
            }
          }
          div:nth-child(2n) {
            border-bottom: 1px solid #FDA143
            p {
              color: #FDA143
            }
          }
          
        }
        .staff_fold {
            background:rgba(255,255,255,1);
            box-shadow:0px 3px 7px 0px rgba(216,223,238,1);
            border-radius:4px 4px 0px 0px;
        }
      }

    }
   
  }
  .container_right {
    flex: 1
    padding: 20px;
    height: 100%;
    background-color: #fff
    .container_right_layer {
      position: relative;
      width: 100%;
      height: 100%;
      .button {
        position: absolute;
        top: 50%;
        left: -20px;
        transform: translateY(-50%)
        width: 20px;
        height: 160px;
        background: rgba(0, 0, 0, 0.3);
        border-radius: 6px 0px 0 6px;
        color: #fff;
        border: none;
      }
      .select {
        .select_left {
          height: 40px;
        }
        .select_right {
          .marquee {
            width: 100%;
            height: 40px;
            align-items: center;
            box-shadow: 0px 3px 7px 0px rgba(216, 223, 238, 1);
            border-radius: 4px;
            .marquee_box{
              position: relative;
              height: 30px;
              overflow: hidden;
              .marquee_list {
                list-style-image: url('../../assets/imgs/gonggao.png');
                 li {
                  height: 30px;
                  line-height: 30px;
                  padding-left: 20px;
                  display: flex;
                  box-sizing: border-box;
                  justify-content: space-between;
                }

                 img {
                  margin-top: 4px;
                }

                 p {
                  width: 80%;
                  padding: 3px 10px;
                }

                 a {
                  color: rgba(71, 117, 202, 1);
                  height: 30px;
                  border-left: 1px solid #d8d8d8;
                  padding: 5px 20px;
                }
              }
            }
          }
          
        }
      }
    }
  }
}


</style>
