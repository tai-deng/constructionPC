<template>
  <div class="container">
    <gantt
      class="left-container"
      :tasks="tasks"
      :changeDate="changeDate"
      :deleteItem="deleteItem"
      @delBtn="delBtn"
      @updataGt="updataGt"
      v-if="isShowGanttm"
    ></gantt>
  </div>
</template>

<script>
import Gantt from "../components/gantt/planGantt";
import { Get_JDGH_List } from "../../../../api/api.js";
import { constants } from "fs";
import { getDateFormatting } from "../base/util.js";

export default {
  name: "fiveD_modules",
  components: { Gantt },
  props: ["changeDate", "deleteItem", "isupdataGt"],
  data() {
    return {
      updateTasks: false, // 是否更新数据
      isShowGanttm: false,
      tasks: {
        data: [],
        links: [
          // { id: 1, source: "2", target: "3", type: "0" },
          // { id: 2, source: "3", target: "4", type: "0" },
        ]
      }
    };
  },
  created() {
    this.updateTasks = true;
    // this.getData();
  },
  methods: {
    // 删除按钮
    delBtn(v) {
      this.$emit("delBtn", v);
    },

    // 获取列表
    getData() {
      let data = [];
      let loading = this.$loading({
        lock: true,
        text: "Loading",
        spinner: "el-icon-loading",
        background: "rgba(0, 0, 0, 0.5)"
      });
      console.time();
      this.Request(
        Get_JDGH_List({ ProjectID: localStorage.getItem("projectid") })
      )
        .then(res => {
          if (res.StatusCode == 200 && res.Detiel.length > 0) {
            res.Detiel.forEach((el, index) => {
              let date= getDateFormatting(el.BaseStartTime);
              data.push(
                Object.assign(
                  {
                    id: el.TaskId,
                    text: el.TaskName,
                    type: "task",
                    start_date: date,
                    duration: el.Duration,
                    parent: el.TaskParentId,
                    progress: el.PercenTage,
                    open: false
                  },
                  el
                )
              );
              // console.log("datadatadatadata", data);
              this.isShowGanttm = true;
            });
            this.tasks = { data, links: [] };
            loading.close();
            this.updateTasks = false;
            this.$emit("onIsupdataGt", false);
          } else {
            this.$message({
              type: "error",
              message: e.Message,
              center: "true"
            });
          }
          loading.close();
        })
        .catch(e => {
          this.$message({ type: "error", message: e.Message, center: "true" });
          loading.close();
        });
    },

    updataGt() {
      this.updateTasks = true;
    }
  },
  watch: {
    isupdataGt(c, o) {
      console.log(c);
      this.updateTasks = c;
    },
    updateTasks(c, o) {
      if (c) {
        this.getData();
      }
    }
  }
};
</script>

<style>
.container {
  height: 88.6%;
  width: 100%;
  /* padding: 0 40px; */
  background-color: #f0f2f5;
}
.left-container {
  height: 100%;
}
</style>