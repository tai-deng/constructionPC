<!-- 首页 -->
<template>
  <div class="container-index">
    <!-- 左部分 -->
    <div v-show="modelFold" style=" width:38%" >
      <div class="container_left">
        <div class="container_left_top">
          <div class="f_left">
             <div v-if="orgCompany[0]">
              <div class="com_name">建设单位：</div>
              <span >{{orgCompany[0].Name}}</span>
             </div>
             <div v-else >
              <div class="com_name">建设单位：</div>
              <span >无</span>
             </div>
             <div v-if="orgCompany[2]">
                
              <div class="com_name">施工单位：</div>
              <span >{{orgCompany[2].Name}}</span>
             </div>
             <div v-else >
              <div class="com_name">施工单位：</div>
              <span >无</span>
             </div>
          </div>
          <div class="f_right">
              <div v-if="orgCompany[1]">
                
                <div class="com_name">设计单位：</div>
              <span >{{orgCompany[1].Name}}</span>
             </div>
             <div v-else >
                
              <div class="com_name">设计单位：</div>
              <span >无</span>
             </div>
          </div>
        </div>
        <div class="container_left_detail">
          <div class="title">
            建设规模： 共{{BuildMon}}栋，总建筑面积 {{TotalArea}} ㎡
          </div>
            <div class="content">
              <div class="table" ref="more">
                <ul>
                  <li>
                    <div >
                    <span>栋号</span>
                    </div>
                    <div>
                    <span>建筑面积㎡</span>
                    </div>
                    <div>
                    <span>地上层数</span>
                    </div>
                    <div>
                    <span>地下层数</span>
                    </div>
                  </li>
                  <li  v-for="(item, index) in detailList " :key="index">
                    <div>
                    <span>{{item.BuildName?item.BuildName:'无数据'}}</span>
                    </div>
                    <div>
                    <span>{{item.BuiltArea?item.BuiltArea:'无数据'}}</span>
                    </div>
                    <div>
                    <span>{{item.FloorUp !== null?item.FloorUp: '无数据' }}</span>
                    </div>
                    <div>
                    <span>{{item.FloorDown !== null? item.FloorDown: '无数据' }}</span>
                    </div>
                  </li>
                </ul>
              </div>
              <button :class="['button']" v-if="detailList.length > 3" @click.prevent="changeFoldState()">
                <i :class="[brandFold ? 'el-icon-caret-bottom' : 'el-icon-caret-top']"></i>
              </button>
            </div>
        </div>

        <div class="container_left_bottom">
          <div class="container_fold">
            <div class="fold_title">
              <span></span>智慧工地
            </div>
            <div class="fold">
              <div>
                <p>8456</p>
                <span>今日考勤人数</span>
              </div>
              <div>
                <p>47</p>
                <span>特种作业人数</span>
              </div>
              <div>
                <p>6</p>
                <span>塔吊24小时预警次数</span>
              </div>
              <div>
                <p>34</p>
                <span>升降机24小时预警次数</span>
              </div>
              <div>
                <p>96%</p>
                <span>环境24小时监测达标率</span>
              </div>
            </div>
          </div>
            <div class="container_fold">
              <div class="fold_title">
                <span></span>人员组织
              </div>
              <div class="staff_fold">
                <headerPeople :peopleList='peopleList'></headerPeople>  
              </div>
            </div>
        </div>
      </div>
    </div>


    <!-- 右侧栏 -->
    <div class="container_right" >
      <div class="move_container" ref="controll">
        <div  class="container_right_layer " >
          <!-- 左侧按钮 -->
          <button :class="['button']" @click.prevent="changeModelFoldState">
            <i :class="[modelFold ? 'el-icon-caret-left' : 'el-icon-caret-right']"></i>
          </button>
          <!-- 主题内容 -->
          <!-- 右上头部结构 -->
            <div class="select">
              <div class="select_left">
                <el-select v-model="value" @change="elementIDByInfo(ProjectID, value)" placeholder="请选择">
                  <el-option
                    v-for="item1 in options"
                    :key="item1.id"
                    :label="item1.text"
                    :value="item1.text">
                  </el-option>
                </el-select>
              </div>
              <div class="select_right">
                <div class="marquee">
                  <div class="marquee_box" ref="marquee">
                    <ul class="marquee_list" :class="{marquee_top:animate}">
                      <li v-for="(item,index) in marqueeList" :key="index">
                        <img src="../../assets/imgs/gonggao.png">
                        <p>{{item.Message}}</p>
                      </li>
                    </ul>
                    <button @click="seeMore">查看更多</button>
                  </div>
                  <div v-show="seenFlag" :class="['marquee_box_content',{'layer_down': layerFlag}]">
                    <van-cell-group>
                      <van-cell v-for="item in marqueeList" :key="item.index"  :value="item.Time" >
                        <div class="problem" slot="title">
                          {{item.Message}}
                        </div>
                      </van-cell>
                    </van-cell-group>
                    <div class="arrow" @click="checkMore" >
                      <div class="inner-box">
                        <i :class="[{'el-icon-arrow-down':!layerFlag}, {'el-icon-arrow-up':layerFlag},'arrow-down']"></i>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            </div>
            <div class="box">

            </div>


          <!-- 项目进度-->
          <div class="project_progress">
            <el-row  class="progress " :gutter="20">
              <el-col :span="3" style="padding: 40px 0 40px 10px ; font-weight:500;color:rgba(51,51,51,1);overflow: hidden; text-overflow: ellipsis; white-space: nowrap">项目进度：</el-col>
              <el-col :span="17">
                <el-row style="z-index: -1;"> 
                  <el-col :span="2" class="progress_date">{{progressData.BaseStartTime}}</el-col>
                  <el-col :span="1" :offset="20" class="progress_date" >{{progressData.BaseFinishTime}}</el-col>
                </el-row>
                <el-row style="z-index: -1;">
                  <el-col :span="24">
                    <el-progress :text-inside="true" :stroke-width="23" :percentage="progressData.PlanPercentage<=100? Math.round(progressData.PlanPercentage):0" color="#4775CA"></el-progress>
                  </el-col>
                </el-row>
                <el-row :gutter="20" style="z-index:-1">
                  <el-col :span="24" >
                    <el-progress :text-inside="true" :stroke-width="23" :percentage="progressData.ActualPercentage<=100? Math.round(progressData.ActualPercentage):0" color="#FDA143"></el-progress>
                  </el-col>
                              
                </el-row>
                <el-row class="sign" style="z-index:-2">
                  <div>计划进度</div>
                  <div>实际进度</div>
                </el-row>
              </el-col>
              <el-col :span="4" style="  padding: 18px 0; font-weight:500;color:rgba(51,51,51,1);overflow: hidden; text-overflow: ellipsis; white-space: nowrap" class="all_less">
                <el-row>
                  <el-col :span="24">总工期：{{progressData.TotalDuration}}天</el-col>
                </el-row>
                <el-row><el-col :span="24"> 剩余工期：{{progressData.SurplusDuration}}天</el-col></el-row>
              </el-col>
            </el-row>
          </div>
          <!-- 模型box -->
          <div class="model-container">
            <div ref="modelContainer" class="model-container"></div>
          </div>
        </div>
      </div>
    </div> 
  </div>
</template>

<script type='textecmascript-6'>
// vuex
import { mapMutations } from "vuex";
// 组件
import * as d3 from "d3";
import { setTimeout, clearTimeout } from 'timers';
// api 接口
import { GetOrgList,
 GetEngingConfigByTypeId, 
 GetPositionConfig, 
 GetBuilding, 
 GetHomeSchedulePlan,
 QueryNoticeList,
 GetElementIDByInfo
 } from '@/api/api.js'
import { constants } from 'fs';
import headerPeople from '../virtualConstruction/collaborativeSetting/collaborativeSetting_components/headerPeople'
//引入全屏插件
// import screenfull from 'screenfull'
export default {
  data() {
    return {
      brandFold: true, //控制表格展开收起
      modelFold: true, //控制model展开收起
      orgCompany: [  //公司单位
      ],
      BuildMon: 0,  // 总建筑楼栋
      TotalArea: 0, //总建筑面积
      detailList: [],    //人员组织数据
      options: [], //请选择项目数据列表
      value: '',   //选中项目数据列表的值
      animate: false,  //控制轮播动画
      marqueeList: [], //滚动数据
      progressData: {
        BaseStartTime: '',
        BaseFinishTime: '',
        ActualPercentage: 0,
        PlanPercentage: 0,
        SurplusDuration: 0,
        TotalDuration: 0

      },
      //列表----所有的人员名单里面要添加 show:false ，并通过这个来控制通讯录的显示隐藏问题
      peopleList: [],
      timer: null,  //控制自动轮播
      interTimer: null,//控制轮播
      seenFlag: false,  // 控制查看更多开关
      layerFlag: false,  //公告展开是否
      elementID: [],
      ProjectID: localStorage.getItem('projectid'),
      TaskElementList: []
    };
  },
  created() {
    // 加载模型
    this._initData();
    // 消息轮播
    this.interTimer = setInterval(this.showMarquee, 2000);
    //获取项目列表
    this.OrgList()
    // 根据所选工程类型加载数据
    this.EngingConfigByTypeId()
    // 获取人员组织
    this.getPeople()
    // 获取模型列表
    this.GetBuildingInfo()
    //获取公告信息
    this.getQueryNoticeList()
    this.elementIDByInfo(this.ProjectID, '全部')
  },
  
mounted() {
  //监听键盘按键事件
  // let self = this;
  // this.$nextTick(function () {
	// document.addEventListener('keyup', function (e) {
	//   //此处填写你的业务逻辑即可
	//   if (e.keyCode == 122) {
	// 	self.onScreenFull();
	//   }
	// })
  // });

  // window.onresize = () => {
  //     console.log('yyy')
  //   }
  },
  components: {
   headerPeople
  },
  methods: {
    _initData() {
      /**
       * 模型状态管理
       */
    this.$nextTick(() => {
        this.$util.getDomLocation(this, "modelContainer").then(res => {
          console.log(res)
          this.modelBox({
            isShowModel: true, //是否显示模型 true:显示模型，如果模型已加载，则显示  false:隐藏模型
            isLoadModel: true, //是否加载模型  true：加载模型，如果已经加载，不会重新加载，  false:卸载模型
            top: res.top, //距离顶部距离‘px'
            left: res.left, //距离左边距离‘px'
            width: res.width, //模型宽‘px'
            height: res.height, //模型高 ‘px'
            zIndex: 100, //模型层级
            background: "",
            ElementIDs: [], // 所有要显示的构件数组，包括半隐藏构件
            highLightElementIDs: [], // 高亮显示的构件
            functionNumber: [39] // 需要模型调用的函数编号数组
          });
        });
      });
    },
    ...mapMutations({
      modelBox: "GET_MODEL_BOX"
    }),
    // 信息滚动
    showMarquee: function() {
      this.animate = true;
      this.timer = setTimeout(() => {
        this.marqueeList.push(this.marqueeList[0]);
        this.marqueeList.shift();
        this.animate = false;
      }, 500);
    },
    //点击查看更多
    seeMore(){
      if(this.marqueeList.length === 0){
        this.$toast({
          message: '没有公告信息',
          duration: 800
        })
      } else {
        this.seenFlag = !this.seenFlag
        if(this.seenFlag){
          window.clearTimeout(this.timer)
          window.clearTimeout(this.interTimer)
          this.timer = null
          this.animate = false;
        }else {
          this.interTimer = setInterval(this.showMarquee, 2000);
        }
      }
   
    },

    // 左侧栏 下拉展开建筑规模数据列表
    changeFoldState() {
      //获取.content 元素节点
      var target = this.$refs.more;
      this.brandFold = !this.brandFold;
      if(!this.brandFold) {
       
      // target.classList.toggle("fixedHeight");
      target.style.height = "685px"
      this.flag = false
      return
      }else {
        target.style.height = "158px"
        this.flag = true
        return
      }
    },
    // 右边栏侧滑
    changeModelFoldState() {
      this.modelFold = !this.modelFold
      this._initData();
     
    },

    // 获取单位列表 type为单位类型(1:建设单位,2:勘察单位,3:设计单位,4:监理单位,5:施工单位,6:其他单位)
    async OrgList(){
      // 获取项目id
      const projectID = localStorage.getItem('projectid')
     
      // 获取单位列表
      let userId = await GetOrgList({ProjectID: projectID})
      // console.log(userId)
      
      if(userId.StatusCode === 200) {
        this.orgCompany = []
        
        let newArr =  userId.Detiel.filter((item) => {
           return item.OrgTypeID === 1 || item.OrgTypeID === 5 || item.OrgTypeID === 3
        })
         
        // console.log(newArr)
        let flag1 = true
        let flag2 = true
        let flag3 = true
        newArr.forEach((item) => {
           if(flag1) {
             if(item.OrgTypeID === 1) {
               
              this.orgCompany[0] = item
              flag1 = false
            }
           }
        })
         newArr.forEach((item) => {
           if(flag2) {
             if(item.OrgTypeID === 3) {
              this.orgCompany[1] = item
              flag2 = false
            }
           }
        })
         newArr.forEach((item) => {
           if(flag3) {
             if(item.OrgTypeID === 5) {
              this.orgCompany[2] = item
              flag3 = false
            }
           }
        })
        console.log(this.orgCompany)
        
      }else{
          this.$message({
              type: "error",
              message: res.Message,
              center: "true"
          });
        }
    },
    async EngingConfigByTypeId(){
      // 获取项目id
      const projectID = localStorage.getItem('projectid')
      console.log(projectID)
      // 获取项目类型
      let projectType = localStorage.getItem("projectTypeId");
      const engingConfigList = await GetEngingConfigByTypeId({ProjectID: projectID, EngingTypeId: projectType})
      console.log(engingConfigList)
      if(engingConfigList.StatusCode === 200) {
        if(engingConfigList.Detiel.length){
        this.BuildMon = engingConfigList.Detiel[0].BuildMon
        this.TotalArea = engingConfigList.Detiel[0].TotalArea
        this.detailList = engingConfigList.Detiel[0].StoriedBuildlList
        }
      }else {
        this.$toast({
          message: '后台无数据',
          duration: 800
        })
      }
    },
    // 获取人员组织
    async getPeople(){
      this.load();
      let res = await this.Request(GetPositionConfig({projectId:localStorage.getItem('projectid')}))
        if(res.StatusCode=='200'){
          this.peopleList=[];
          // 岗位配置
          // var text={DepartmentName:'领导',UserRoleList:[{cDepName:'项目经理',cName:res.Detiel[0].ProjMgr.Name},{cDepName:'项目经理',cName:res.Detiel[0].DeputyProMgr.Name}]}
          // this.peopleList[0]=text;
          // for(var i=0;i<res.Detiel[0].DeptList.length;i++){
          //     for(var x=0;x<res.Detiel[0].DeptList[i].UserRoleList.length;x++){
          //         var key = "show";
          //         var value = false;
          //         res.Detiel[0].DeptList[i].UserRoleList[x][key]=value;
          //     }
          //     this.peopleList.push(res.Detiel[0].DeptList[i]);
          // }
          // console.log(this.peopleList)

          // 岗位配置
          this.peopleList=res.Detiel[0].DeptList;
          for(var i=0;i<this.peopleList.length;i++){
            for(var x=0;x<this.peopleList[i].UserRoleList.length;x++){
              var key = "show";
              var value = false;
              this.peopleList[i].UserRoleList[x][key]=value;
            }
          }
          console.log(this.peopleList);
        }else{
          this.$message({
              type: "error",
              message: res.Message,
              center: "true"
          });
        }
        this.$toast.clear();
    },

    //获取楼栋信息
    async GetBuildingInfo() {
      let res = await this.Request(GetBuilding({projectid: localStorage.getItem('projectid')}))
      if(res.StatusCode == 200){
        this.options = res.Detiel
        this.options.unshift({
          id:"全部",
          text:"全部"
        })
        console.log(res)
        this.value = res.Detiel[0].text;

      }else{
          this.$message({
              type: "error",
              message: res.Message,
              center: "true"
          });
        }
    },
    //获取进度
    async schedulePlan(data) {
      this.load()
      if(!data){
        this.$toast('没有选中模型')
        return
      }
      let BuildingName = data==='全部'?'':data
      let result = await this.Request(GetHomeSchedulePlan({ProjectID: localStorage.getItem('projectid'), BuildingName: BuildingName}))
        console.log(result)
        if(result.StatusCode === 200) {
          // let isTrue = result.Detiel[0].TotalDuration
           this.TaskElementList = result.Detiel[0].TaskElementList
            console.log(this.elementID)
            console.log(this.TaskElementList)
             this.modelBox({
                isShowModel: true, //是否显示模型 true:显示模型，如果模型已加载，则显示  false:隐藏模型
                isLoadModel: true, //是否加载模型  true：加载模型，如果已经加载，不会重新加载，  false:卸载模型
                zIndex: 100, //模型层级
                ElementIDs: this.elementID, // 所有要显示的构件数组，包括半隐藏构件
                highLightElementIDs: result.Detiel[0].TaskElementList, // 高亮显示的构件
                functionNumber: [33] // 需要模型调用的函数编号数组
                });

            this.progressData = result.Detiel[0]
            console.log(this.progressData)
       
        }else {
          this.$message({
            type: 'error',
            message: res.Message,
            center: 'true'
          })
        }
        this.$toast.clear()
    },
    //根据构件参数获取所有ElementID
    async elementIDByInfo(ProjectID, BuildName){
      this.load()
      // debugger
      console.log(BuildName)
      // if(BuildName === "全部"){
      //     this.schedulePlan(BuildName)
      //   //  this.modelBox({
      //   //   isShowModel: true, //是否显示模型 true:显示模型，如果模型已加载，则显示  false:隐藏模型
      //   //   isLoadModel: true, //是否加载模型  true：加载模型，如果已经加载，不会重新加载，  false:卸载模型
      //   //   zIndex: 100, //模型层级
      //   //   ElementIDs: [], // 所有要显示的构件数组，包括半隐藏构件
      //   //   highLightElementIDs: [], // 高亮显示的构件
      //   //   functionNumber: [39] // 需要模型调用的函数编号数组
      //   //   });
          
      // }else {
        
        this.elementID = []
        const data = {
          ProjectID,
          BuildName
        }
        let res = await this.Request(GetElementIDByInfo(data))
        console.log(res)
        if(res.StatusCode === 200){
          this.elementID = res.Detiel
          this.schedulePlan(BuildName)
        }else {
            this.$message({
              type: 'error',
              message: res.Message,
              center: 'true'
            })
          }
          this.$toast.clear()

      // }
     
    },
    // 获取公告列表
    async getQueryNoticeList(){
      const projectID = localStorage.getItem('projectid')
      const userId = localStorage.getItem('userId')
      let data = {
        UserId: userId,
        ProjectId: projectID,
        page: this.page,
        rows: this.rows
      }
      let res = await this.Request(QueryNoticeList(data))
      console.log(res)
      if(res.StatusCode ===200){
        this.marqueeList = res.Detiel
        this.marqueeList.forEach(item=>{
          item.Time = item.Time.substr(0,10)
        })
      }else {
          this.$message({
            type: 'error',
            message: res.Message,
            center: 'true'
          })
        }
    },
    //公告查看更多
    checkMore(){
     this.layerFlag = !this.layerFlag
    }

    
  }
};
</script>

<style lang ='stylus' rel ='stylusheet/stylus'>
.container-index {
  /* width: 98%;
  height: 966px;
  padding: 0 !important; */
  .el-select {
    height:40px;
    width:100%
    box-shadow:0px 3px 7px 0px rgba(161,192,250,1);
    border-radius:4px;
    .el-input {
      
      .el-input__inner { 
        height: 40px;
        background:rgba(71,117,202,1);
        box-shadow:0px 3px 7px 0px rgba(161,192,250,1);
        border: none;
        border-radius:4px;
        font-size: 18px;
        color: #fff;
      }

    }
  }

  /* 修改input按钮样式 */
   .select {
      .select_left {
        .el-input__suffix {
          width: 50px;
          background-color: #435089;
          right: 0 !important;
          border-radius:0px 4px 4px 0px;
          .el-icon-arrow-up:before {
            content: '\E60C';
            font-size: 18px;
            color: #fff;
          }

        }
      }
    }
    /* 项目进度条样式 */
  .project_progress {
    position: absolute;
    top: 40px;
    right: 0;
    background-color: transparent;
    width: 100%;
    max-width: 1040px;
    z-index: 110;
    .progress {
      margin-top: 39px;
      margin-left: 0 !important;
      .progress_date {
        font-size: 14px;
        color: #999;
        margin-bottom: 10px;
      }
      .el-progress-bar{
        
        .el-progress-bar__outer {
          border: 1px solid #999;
          border-radius: 0;
        }
        .el-progress-bar__inner {
          border-radius: 0;
        }
      }
      .sign {
        margin-top: 10px;
        div {
          float: left;
          padding-left: 20px;
          padding-right: 30px
          font-size: 14px;
          color: #333;
        }
        div:first-child:after {
          position: absolute;
          top: 50%;
          left: 0;
          transform: translateY(-50%);
          content: '';
          width: 8px;
          height:8px;
          background-color: #4775CA;
          border-radius: 4px;
        }
        div:last-child:after {
          position: absolute;
          top: 50%;
          left: 115px;
          transform: translateY(-50%);
          content: '';
          width: 8px;
          height:8px;
          background-color: #FDA143;
          border-radius: 4px;
        }
      }
      .all_less {
        .el-row {
          margin 7px 0;
        }
      }
      .el-col-17 {
        .el-row:nth-child(2) {
          .el-progress-bar{
            .el-progress-bar__outer {
              border-bottom: none !important;
              .el-progress-bar__innerText {
                top: -34px;
              }
              .el-progress-bar__innerText:before {
                bottom: -14px;
                border-top: 6px solid #D8D8D8;
                
              }

              }
            
            }
          }
        .el-progress-bar__outer {
            overflow: visible;

          }
        .el-progress-bar__innerText {
                position: absolute;
                right: -32px;
                width:65px;
                height:28px;
                line-height: 28px;
                text-align: center;
                background:rgba(216,216,216,1);
                border-radius:2px;
                color: #333;

        }
        .el-progress-bar__innerText:before {
          position: absolute;
          right: 20px;
          content: '';
          height: 0;
          width: 0;
          border: 8px solid transparent;

          
        }
        .el-row:nth-child(3) {
          .el-progress-bar{
            .el-progress-bar__outer {
              .el-progress-bar__innerText {
                bottom: -34px;
                width:65px;
              }
              .el-progress-bar__innerText:before {
                top: -14px;
                border-bottom: 6px solid #D8D8D8;
                
              }
              
              }
            
            }
          }
      }
    }
  }
  
    
}

</style>

<style lang='stylus' scoped rel='stylesheet/stylus'>
* {
  font-size: 18px;
}

.container-index {
  position: relative;
  width: 100%;
  height: 100%;
  font-size: 0.3rem;
  background: #F5F6FA;
  color: #000;
  display: flex;
  justify-content: space-between;
  flex-wrap: nowrap;

  // 左侧样式
  .container_left {
    position: relative;
    display: flex;
    flex-direction: column;
    flex-wrap: nowrap;
    // width: 600px;
    height: 100%;
    margin: 0 40px 0 20px;
    .container_left_top {
      // height: 9%;
      height: 92px;
      padding: 1% 20px;
      background: #fff;
      display: flex;
      justify-content:space-between;
      border: 1px solid #C5CAD7;
      box-sizing: border-box;

      .f_left {

        width: 50%;
        display: flex;
        flex-direction: column;
        >div {
          padding: 8px 0;
          font-size:18px;
          font-family:SourceHanSansCN-Medium;
          font-weight:500;
          display: flex;
          justify-content: flex-start;
          .com_name {
            display: inline-block;
            color:rgba(51,51,51,1);
            width: 90px;
            line-height: 25px;
            }
          span {
            flex: 1;
            display: inline-block;
            color: #666;
            vertical-align: top;
            line-height:25px;
            white-space: nowrap;
            text-overflow: ellipsis 
            overflow-x: visible
            overflow-y: visible
          }
        }
      }
      .f_right {
        width: 50%;
        >div {
          
          padding: 8px 0;
          font-size:18px;
          font-family:SourceHanSansCN-Medium;
          font-weight:500;
          display: flex;
          justify-content: flex-start;
          
          .com_name {
            display: inline-block;
            color:rgba(51,51,51,1);
            width: 90px;
            line-height: 25px;
            }
          span {
            flex: 1;
            display: inline-block;
            color: #666;
            line-height:25px;
            white-space: nowrap;
            text-overflow: ellipsis 
            overflow: hidden
          }
        }
      }
      
    }
    .container_left_detail {
      position: relative;
      padding-top: 10px
      // height: 28%;
      height: 230px;
      opacity: 1;
      z-index 50

      .title {
        margin-bottom: 10px;
        padding-left: 20px;
        line-height: 40px;
        color: #fff;
        height:40px;
        background:rgba(71,117,202,1);
        box-shadow:0px 3px 7px 0px rgba(216,223,238,1);
      }
      .content {
        text-align: center;
        .table {
          overflow hidden;
          height: 158px;
          border: 1px solid #C5CAD7;
          background-color #F4F6FF
          transition: height 0.4s ease-out
          ul {
            border-top: 0.013333rem solid #c5cad7;
            li {
              display: flex;
              justify-content space-around;
              flex-direction row;
              flex-wrap: nowrap
              text-align: center;
             
              div {
                width: 25%;
                span {
                  display: block;
                  margin 0 20px;
                  height: 39px;
                  line-height: 39px;
                  color: #333;
                  border-bottom: 1px solid #C5CAD7;
                  overflow: hidden;
                  text-overflow: ellipsis;
                  white-space: nowrap;
                }
              }
              div:nth-child(2n-1) {
                background:rgba(244,246,255,1);
              }
              div:nth-child(2n) {
                background:rgba(234,237,250,1);
              }
              
            }
            li:first-child {
              div {
                span {
                  border-bottom: 1px solid #1E2637;
                }
              }
            }
            
          }
          
        }
        .button {
          width: 160px;
          height: 20px;
          background: rgba(0, 0, 0, 0.3);
          border-radius: 0px 0px 6px 6px;
          color: #fff;
          border: none;
        }
        .btn_reserve {
          border-radius: 6px 6px 0px 0px !important;

        }
        .fixedHeight {
          
        }
      }

     
     
    }
    .container_left_bottom{

      display: flex;
      flex-direction: column;
      flex: 1;
      width: 100%;
      height: 56%;
      z-index: 0;
      .container_fold {
        display: flex;
        justify-content: start;
        flex-direction: column
        flex-wrap: nowrap;

        .fold_title {
          font-size: 20px;
          color: #333;
          font-weight: 500;
          padding-bottom: 14px;
          span {
            margin-right: 16px;
            display inline-block;
            width: 4px;
            height: 20px;
            background:rgba(253,161,67,1);
          }
        }
        .fold {
          flex: 1;
          display: flex;
          justify-content: space-around;
          flex-wrap: nowrap;
          margin-bottom: 14px;
          div {
            display: flex;
            justify-content center
            flex-direction: column
            align-items: center
            // width: 18%;
            width: 115px;
            height 100%;
            
            // height 226px;
            background:rgba(255,255,255,1);
            box-shadow:0px 3px 7px 0px rgba(216,223,238,1);
            border-radius:4px 4px 0px 0px;
            p {
              font-size: 29px;
              margin-bottom: 11px;
            }
            span {
              width: 80%
              margin-top: 11px;
              text-align: center;
              color: #666;
            }
          }
          div:nth-child(2n-1) {
            border-bottom: 1px solid #4775CA
            p {
              color: #4775CA
            }
          }
          div:nth-child(2n) {
            border-bottom: 1px solid #FDA143
            p {
              color: #FDA143
            }
          }
          
        }
        .staff_fold {
            background:rgba(255,255,255,1);
            box-shadow:0px 3px 7px 0px rgba(216,223,238,1);
            border-radius:4px 4px 0px 0px;
            height 100%
            overflow hidden
          
          .company_box {
            padding: 20px;
            font-size: 18px;
            position: relative;
            overflow-y: auto;
            overflow-x: hidden;
            height: 100%;
            box-sizing: border-box;

            ul {
              
              position: relative;
              margin: 0;
            }
            .scondList:not(:first-child) {
              border-left: 1px solid #E9E9E9;
              position: relative;
              top: -12px;
              left: 0;
            }

            .firstList {
              border-left: 1px solid #979797;
              position: relative;
              top: 50px;
              left: 50px;
              width: 80%;
            }

            .firstList_line {
              border-left: 0;
            }

            .firstSpan {
              width: 100px;
              height: 30px;
              text-align: center;
              line-height: 30px;
              display: inline-block;
              background-color: #FDA143;
              position: relative;
              color: #ffffff;
              top: -35px;
              left: -50px;
            }

            .firstSpanColor {
              background-color: #4775CA;
            }

            .box_span_border {
              border: 1px solid #E9E9E9;
              display: inline-block;
              width: 100px;
              height: 30px;
              text-align: center;
              line-height: 30px;
              margin-top: 20px;
            }

            .box_span_border:hover {
              background-color: #F5F6FA;
            }

            .box_span_line {
              width: 28px;
              border-bottom: 1px solid #E9E9E9;
              display: inline-block;
              height: 30px;
            }

            .position_remove {
              position: relative;
              top: -91px;
              left: 80px;
            }

            .box_span_height {
              height: 100%;
              width: 0;
              display: inline-block;
              border-left: 1px solid #333333;
            }

            .firstLine_line {
              position: relative;
              top: -40px;
              left: -50px;
            }

            .click_box_show {
              z-index: 200;
              position: absolute;
              margin-left: 80px;
              font-size: 16px;
              padding: 5px 10px;
              background: rgba(0, 0, 0, 0.4);
              color: #ffffff;
              width: 240px;
              height: 81px;
              margin-top: 5px;
            }
          }
          .company_box::-webkit-scrollbar {
            width: 8px;
            }
          .company_box::-webkit-scrollbar-track {
            -webkit-box-shadow: inset 0 0 6px rgba(0,0,0,0.3);
            border-radius: 10px;
            background-color: #F5F5F5;
          } 

          //     /*定义滑块 内阴影+圆角*/
          .company_box::-webkit-scrollbar-thumb {
            border-radius: 10px;
            -webkit-box-shadow: inset 0 0 6px rgba(0,0,0,.3);
            background-color: #555;
          } 

        }

      }
      .container_fold:first-child {

        height: 200px;
      }
      .container_fold:last-child {
        flex: 1;

      }

    }
   
  }

    // 可以设置不同的进入和离开动画 
    // 设置持续时间和动画函数 
    // @keyframes slide-fade-out {
    //   0% {
    //     // width: 100%;
    //     // transform: translate(0, 0);
    //   }
    //   100% {
    //     // width: 158%;
    //     // transform: translate(-38%, 0);

    //   }
    // }
    //  @keyframes slide-fade-in {
    //   0% {
    //     // width: 158%
    //     // transform: translate(-38%, 0);
    //   }
    //   100% {
    //     // width: 100%
    //     // transform: translate(0, 0);

    //   }
    // }
    // .foldout {
    //   animation-name: slide-fade-out;
    //   animation-duration: 0.4s;
    //   animation-iteration-count: 1;
    //   animation-fill-mode: both;
    //   animation-play-state: running;
    // }
    // .foldin {
    //   animation-name: slide-fade-in;
    //   animation-duration: 0.4s;
    //   animation-iteration-count: 1;
    //   animation-fill-mode: both;
    //   animation-play-state: running;
    // }


// 右侧样式  
  .container_right {
    flex: 1
    width: 1080px;
    height: 100%;
    background-color: rgba(255,255,255,1);
    box-sizing: border-box;
    .move_container {
      padding: 20px;
      padding-right: 20px;
      width: 100%;
      height 100%;
     background-color: rgba(0,0,0,0);
      box-sizing: border-box;
      .container_right_layer {
        position: relative;
        width: 100%;
        height: 100%;
        background-color: #fff
        .button {
          position: absolute;
          top: 50%;
          left: -20px;
          transform: translateY(-50%)
          width: 20px;
          height: 160px;
          background: rgba(0, 0, 0, 0.3);
          border-radius: 6px 0px 0 6px;
          color: #fff;
          border: none;
        }
        .btn_active {
          border-radius: 0 6px 6px 0 !important;
        }
        .select {
          position: absolute;
          background-color: transparent;
          height 40px;
          width: 100%;
          z-index: 115;
          .select_left {
            float left;
            width: 34%;
            max-width: 343px;
            height: 40px;
            .el-input__suffix {

            }
          }
          .select_right {
            float right;
            width: 62%;
            max-width: 673px;
            background-color: #fff;
            box-shadow: 0px 3px 7px 0px rgba(216, 223, 238, 1);
            border-radius: 4px;
            .marquee {
              position: relative;
              width: 100%;
              height: 30px;
              padding: 5px 0px;
              align-items: center;
              .marquee_box{
                position: relative;
                height: 30px;
                overflow: hidden;
                .marquee_list {
                  float: left
                  width: 75%;
                  background-color: #fff;
                  list-style-image: url('../../assets/imgs/gonggao.png');
                  li {
                    width: 100%;
                    height: 30px;
                    line-height: 30px;
                    padding-left: 20px;
                    display: flex;
                    box-sizing: border-box;
                    justify-content: space-between;
                  }

                  img {
                    margin-top: 4px;
                  }

                  p {
                    width: 85%;
                    padding: 3px 10px;
                    color: #666;
                  }
                }
                button {
                  float: right;
                  width: 25%
                  color: rgba(71, 117, 202, 1);
                  background-color: transparent;
                  height: 26px;
                  border:none;
                  border-left: 1px solid #d8d8d8;
                  padding: 5px 20px;
                }
                .marquee_top {
                  transition: all 0.5s;
                  margin-top: -30px;
                }
              }
              .marquee_box_content{
                position: absolute;
                top: 50px;
                left: 0;
                width: 100%;
                height: 220px;
                overflow-y: hidden;
                padding: 20px;
                padding-bottom: 38px;
                box-sizing: border-box;
                background-color: #fff;
                box-shadow: 0px 3px 7px 0px rgba(216, 223, 238, 1);
                border-radius: 4px;
                .problem{
                  width: 430px;
                  font-size: 18px;
                  color:#666;
                }
                .arrow {
                  position: absolute;
                  bottom: 0px;
                  left: 50%;
                  background-color: #fff;
                  width: 100%;
                  text-align: center;
                  height: 39px;
                  transform: translateX(-50%)
                    .inner-box{
                      border-top: 1px solid #eee;
                      margin: 0 20px;
                      margin-left: 40px;
                      height: 100%;
                      .arrow-down{
                        width: 80px;
                        padding: 10px 0;
                      }
                     }
                }
              }
              .layer_down {
                // overflow-y: visible!important;
                height: auto!important;
                max-height: 700px;
              }
            }
            
          }
        }
        .box{
          position: absolute;
          top: 0px;
          left: 0px;
          width: 70px;
          height: 70px;
          background-color: rgba(255,255,255,1)
          z-index: 114
        }
      }
    }

  }
  
}

.model-container {
  position: absolute;
  width: 100%;
  height: 100%;
  padding: 0 !important;
  z-index:100
}

</style>
