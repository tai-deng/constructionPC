<!-- logMode 系统日志 -->

<template>
  <div class="logMode-container">
    <el-input
      class="logMode-search"
      placeholder="输入关键字查询"
      suffix-icon="el-icon-search"
      v-model="params.keyword"
      select-when-unmatched
      @blur="onBlur"
    ></el-input>
    <el-table :data="tableData" stripe style="width: 100%">
      <el-table-column type="index" label="序号" width="100" align="center"></el-table-column>
      <el-table-column prop="cUserName" label="账号" align="center"></el-table-column>
      <el-table-column prop="UserRoleName" label="用户名" align="center"></el-table-column>
      <el-table-column prop="cIP" label="IP" align="center"></el-table-column>
      <el-table-column label="登录时间" align="center">
        <template
          slot-scope="scope"
        >{{require('moment')(scope.row.dLogDate).format('YYYY-MM-DD h:mm:ss')}}</template>
      </el-table-column>
    </el-table>
    <el-pagination background layout="prev, pager, next" :total="totalNum" @current-change="curChange" :current-page.sync='params.pageIndex'
    :page-size="params.pageSize"></el-pagination>
  </div>
</template>
<script>
import { GetLogPageList } from "@/api/api.js";
export default {
  name: "logModes",
  data() {
    return {
      tableData: [],
      params: {
        // 分页获取系统日志列表 参数对象
        projectId: localStorage.getItem("projectid"),
        pageIndex: 1,
        keyword: "",
        pageSize: 12
      },
      totalNum:0,
    };
  },
  created() {
    this._initData();
  },
  watch: {
    searchValue(d) {
      console.log(d);
    }
  },
  methods: {
    _initData() {
      this.getLogPageList(this.params);
    },
    /**
     * 搜索
     */
    getLogPageList(params) {
      this.load();
      this.Request(GetLogPageList(params)).then(res => {
        console.log(res);
        if (res.StatusCode === 200) {
          this.tableData = res.Detiel;
          this.totalNum = Number(res.Message)
        }
        this.$toast.clear();
      });
    },
    /**
     * 失去焦点则搜索
     */
    onBlur() {
      this.getLogPageList(this.params);
    },
    curChange(d){
      this.params.pageIndex = d
      this.getLogPageList(this.params);
    }
  }
};
</script>
<style>
.logMode-container {
  width: 98%;
  height: 96.8%;
  padding: 20px;
  background: rgba(245, 246, 250, 1);
}
.logMode-container .el-table {
  /* width: 100%; */
}
.logMode-container table thead tr th {
  background: rgba(67, 80, 137, 1);
  font-size: 18px;
  font-family: SourceHanSansCN-Medium;
  font-weight: 500;
  color: rgba(255, 255, 255, 1);
  height: 50px;
}
.logMode-container .el-table__row {
  height: 50px;
  background: rgba(255, 255, 255, 1);
  font-size: 18px;
  font-family: SourceHanSansCN-Medium;
  font-weight: 500;
  color: rgba(51, 51, 51, 1);
}
.logMode-container .el-table__row--striped {
  background: rgba(244, 246, 255, 1);
  height: 50px;
  font-size: 18px;
  font-family: SourceHanSansCN-Medium;
  font-weight: 500;
  color: rgba(51, 51, 51, 1);
}
.logMode-search {
  width: 300px;
  height: 40px;
  margin-bottom: 20px;
}
.logMode-search .el-input__inner {
  font-size: 18px;
  font-family: SourceHanSansCN-Normal;
  font-weight: 400;
  color: rgba(153, 153, 153, 1);
  background: rgba(255, 255, 255, 1);
  box-shadow: 0px 3px 7px 0px rgba(229, 229, 229, 1);
  border-radius: 4px;
  border-width: 0px;
}
.logMode-search .el-input__icon {
  margin-right: -6px;
  width: 50px;
  height: 40px;
  background: rgba(67, 80, 137, 1);
  border-radius: 0px 4px 4px 0px;
}
.logMode-search .el-input__suffix {
  background: rgba(67, 80, 137, 1);
  border-radius: 0px 4px 4px 0px;
}
.logMode-search
  .el-input__suffix
  .el-input__suffix-inner
  .el-icon-search:before {
  color: #fff;
}
.logMode-container .el-pagination {
    text-align: center;
    margin-top: 20px;
}
</style>
