<!--  import of construction 导入施工图预算 -->
<template>
  <div class="container-import-construction">
    <div class="top">
      <div class="buts">
        <button class="back-but" @click="back">
          <span class="icon-18 back-size"></span> &nbsp;返回上一级
        </button>
        <!-- <button class="re-upload">重新导入</button> -->
        <!-- <el-upload
            v-if="reUpload"
            class="re-upload"
            action
            :http-request="uploadFileXLSX"
            :file-list="fileList"
            :show-file-list="false"
            style="display: inline-block;"
          >
            重新导入
          </el-upload> -->
      </div>
      <div class="down">
        <menu-el-select :list='TableNamelist' @selected='select'></menu-el-select>
      </div>
    </div>
    <div class="bottom">
      <!-- :label="`<span>aa</span>${item.val}`" -->
      <el-table :data="list" max-height="800" stripe fit highlight-current-row :header-cell-style="{background:'#435089',color:'#FFFFFF'}">
        <el-table-column
          :prop="item.val"
          
          v-for="item in titles"
          :key="item.index"
        >
         <template slot="header" slot-scope="scope">
           <el-checkbox  @change="onClickRow(scope.$index)">{{item.val}}</el-checkbox>
         </template>
        </el-table-column>
      </el-table>
    </div>
    <div class="is-upload">
      <button class="upload-but" @click="trueImportXlsx">确定导入</button>
    </div>
  </div>
</template>

<script type='textecmascript-6'>
import menuElSelect from "@/common/Selects/elSelect.vue";

import {GetBOQTempTable ,SaveImport} from '@/api/api.js'
export default {
  props: {
    tableData: {
      type: Array,
      default: () => {
        return [];
      }
    },
    XlsxTableNamelist:{
      type: Array,
      default: () => {
        return [];
      }
    }
  },
  data() {
    return {
      reUpload:false,//是否显示重新导入按钮
      list: [], //展示表数据
      titles: [], //表头
      indexList:[],//已勾选的表头在titles中的下标数组
      valList:[],//已勾选的表头在titles中的val数组 已去null 去重
      TableNamelist:[],//选择表下拉菜单 XlsxTableNamelist的转换结构
      pageSize:10000,
      pageIndex:1,
      projectid:'12345678',
      type:'',//类型 汉字，如门 ， 窗  
    };
  },
  created() {
    console.log(this.tableData,this.XlsxTableNamelist);
    //转换表下拉菜单数据
    this.TableNamelist = []
    Object.keys(this.XlsxTableNamelist).forEach(i => {
        console.log(i,this.XlsxTableNamelist[i])
        this.TableNamelist.push({
          id: i,
          label: this.XlsxTableNamelist[i]
        })
    });
    console.log(this.TableNamelist)
    
  },
  mounted(){
    this.$nextTick(()=>{
      //显示重新导入按钮
      this.reUpload = true
    })
  },
  components: {
    menuElSelect
  },
  methods:{
    back(){
      this.$emit('back')
    },
    /**
     * 选择哪个表头
     */
    onClickRow(index){
      if(this.indexList.indexOf(index)==-1){
        this.indexList.push(index)
      }else{
        this.indexList[this.indexList.indexOf(index)]=null
      }
      console.log(this.indexList)
      let a = this.indexList.sort().filter(i=>{
        return i||i==0
      })
      console.log(a)
      let arr = []
      a.forEach(k=>{
        arr.push(this.titles[k].val) 
      })
      console.log(arr)
      this.valList = arr
    },
    /**
     * 选择绘图列表某项
     */
    select(data){
      this.load()
       /* eslint-disable */
      console.log(data)
      
      this.type  = data
      let param = {
        pageSize:this.pageSize,
        pageIndex:this.pageIndex,
        projectid:this.projectid,
        userid:Number(localStorage.getItem('userId')),
        type:data
      }
      // 根据绘图选项 获取缓存中的表数据 表头
      this.Request(GetBOQTempTable(param)).then(res=>{
        if(res.StatusCode===200){
          this.titles = []
          //从第个对象中 获取所有表头
          Object.keys(res.Result[0]).forEach((i,k)=>{
            console.log(i,k)
            this.titles.push({
              id:k+'',
              val:i
            })
          })
          this.list = res.Result
        }else{
          this.$message({type:'error',message:res.Message,center:'true'})
        }
        this.$toast.clear()
      })
    },
    /**
     * 确定导入
     */
    trueImportXlsx(){
      if(!this.type){
        this.$message({type:'error',message:'请选择类型',center:'true'})
        return
      }
      if(this.valList.length===0){
        this.$message({type:'error',message:'请选择导出项',center:'true'})
        return
      }
      this.load()
      let getParams = {
        type:this.type,
        isAdd:0,
        projectid:this.projectid,
        userid:Number(localStorage.getItem('userId')),
        type:this.type,
      }
      let postParams=this.valList
      // 确定导入接口
      this.Request(SaveImport(getParams,postParams)).then(res=>{
        if(res.StatusCode===200){
          this.$message({type:'success',message:res.Message,center:'true'})
          this.$emit('toSuccessPage')
        }else{
          this.$message({type:'error',message:res.Message,center:'true'})
        }
        this.$toast.clear()
      })
    }
  },
};
</script>
<style lang='stylus' scoped rel='stylesheet/stylus'>
@import '../../../../assets/stylus/variable.styl'

.container-import-construction
  width 100%
  height 100%
  box-sizing border-box
  padding 0 20px
  .top
    width 100%
    height 80px
    display flex
    padding-top 20px
    box-sizing border-box
    .buts
      // width 500px
      height 40px
      display flex
      .back-but
        display inline-block
        width 180px
        height 40px
        background $font-color-13
        box-shadow 0px 2px 4px 0px rgba(161, 192, 250, 1)
        border-radius 4px
        font-size $font-size-16
        color $font-color-03
        .back-size
          font-size $font-size-16
      .re-upload
        display inline-block
        width 120px
        height 40px
        background $font-color-14
        border-radius 4px
        font-size $font-size-16
        font-family SourceHanSansCN-Medium
        font-weight 500
        color $font-color-03
        line-height $font-size-16
        margin 0 20px
        text-align center
        line-height 40px
    .down
      width 460px
      height 40px
  .bottom
    overflow-x auto
  .is-upload
    width 100%
    position fixed
    bottom 300px
    left 0
    text-align center
    .upload-but
      width 200px
      height 60px
      background #FDA143
      box-shadow 0px 0px 10px 10px rgba(255,198,140,0.9)
      border-radius 4px
      color $font-color-03
      font-size $font-size-18
      border none
</style>
<style>
.bottom .el-table th > .cell {
  white-space: nowrap;
}
.bottom .el-table .cell,
.el-table th div {
  overflow: initial;
  text-overflow: initial;
}
.bottom .el-table td {
  border-bottom: initial;
}
.bottom .el-table .cell, .el-table th div{
  white-space: nowrap;
  overflow: hidden !important;
  text-overflow: ellipsis !important;
    width: 160px;
text-align: center;
}
.container-import-construction .el-checkbox__label{
  color: white
}
</style>

